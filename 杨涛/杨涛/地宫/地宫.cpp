#include "pch.h"
#include <iostream>
#include<graphics.h>
#include<time.h>
#define STATE_GAME 1//开始游戏
#define STATE_ABOUT 2//关于游戏
#define STATE_MENU 3//主页面
IMAGE a, b, c, d, e, f[100],g[5];//怪物&地图&物品贴图
IMAGE h[10];//对话框&对战贴图
int i = 0, j = 0, w = 0,w1=0, z = 0, v = 0;//数组w为楼层w1为记录最高到过哪一层
int x = 6, y = 11;//人物坐标
short Dtmap1[24][13][13];//地图数组
int state = STATE_MENU;//游戏状态
int menuChoose = 0;//菜单状态
int shop_state = 1;//商店状态
int old_man_state = 1;//老者状态
int trader_state = 1;//商人状态
int plot_state = 0, plot_state1[10] = {0};//对话状态
int up_state = -1, up1_state = -1,up2_state=0;//风之罗盘状态,up_state得到道具为一则道具关不掉
int cross_state = 0;//检测是否拿到十字架
int glory_State = -1,glory1_State=0;//圣光辉状态，glory1_State表示得到道具为一则开发模式关不掉
int Administrators = -1;//管理员模式

//人物数据
struct player_Data
{
	int grade=1;//等级
	int hp = 1000	;//生命
	int ack = 100;//攻击
	int def = 100;//防御
	int money = 0;//钱
	int current_Experience = 0;//现在的经验
	int yellow_Key = 1;//黄钥匙
	int blue_Key = 1;//蓝钥匙
	int red_Key = 1;//红钥匙
}player,player_1;


//怪物数据
struct monster
{
	int hp;						//怪物生命
	int atk;					//怪物攻击
	int def;					//怪物防御
	int gold;					//怪物死亡掉落金币
	int exp;					//怪物死亡掉落经验
};
//定义怪物数据
struct monster 绿头怪 = { 50,20,1,1,1 };
struct monster 红头怪 = { 70,15,2,2,2 };
struct monster 青头怪 = { 200,35,10,5,5 };
struct monster 怪王 = { 700,250,125,32,30 };
struct monster 骷髅人 = { 110,25,5,5,4 };
struct monster 骷髅士兵 = { 150,40,20,8,6 };
struct monster 骷髅队长 = { 400,90,50,15,12 };
struct monster 小蝙蝠 = { 100,20,5,3,3 };
struct monster 大蝙蝠 = { 150,65,30,10,8 };
struct monster 红蝙蝠 = { 550,160,90,25,20 };
struct monster 兽面人 = { 300,70,45,13,10 };
struct monster 兽面武士 = { 900,350,250,50,50 };
struct monster 初级法师 = { 125,50,25,10,7 };
struct monster 高级法师 = { 100,200,110,30,25 };
struct monster 初级卫兵 = { 450,150,90,22,19 };
struct monster 冥卫兵 = { 1250,320,350,55,55 };
struct monster 高级卫兵 = { 1500,460,360,60,60 };
struct monster 麻衣法师 = { 250,120,70,20,17 };
struct monster 红衣法师 = { 500,300,230,47,45 };
struct monster 金卫士 = { 850,350,200,45,40 };
struct monster 金队长 = { 900,550,350,77,70 };
struct monster 石头怪人 = { 500,115,65,15,15 };
struct monster 白衣武士 = { 1300,300,150,40,35 };
struct monster 灵法师 = { 1500,630,330,80,70 };
struct monster 灵武士 = { 1200,780,400,88,75 };
struct monster 双手剑士 = { 1200,320,420,65,75 };
struct monster 冥战士 = { 2000,680,590,70,65 };
struct monster 冥队长 = { 2500,900,850,84,75 };
struct monster 魔龙 = { 179999,1299,1050,0,0 };


//人物各层出现地址
int playe_address[24][4] = { 
{6,11,6,2},
{6,10,2,1},
{1,2,1,10}, 
{2,11,11,10},
{11,10,1,10},
{1,10,10,10},
{10,10,5,10},
{6,11,2,1},
{1,2,8,5},
{7,4,7,8},
{5,7,1,10},
{2,11,10,11},
{10,11,2,11},
{2,11,5,11},
{6,10,6,1},
{6,10,6,4},
{6,10},
};

//引用人物各层出现地址
void Playe1_address()//上楼
{
	x = playe_address[w][0];
	y = playe_address[w][1];
}
void Playe2_address()//下楼
{
	x = playe_address[w][2];
	y = playe_address[w][3];
}

//地图
void ditushuzu()
{
	int i, j,w;
short Dtmap[24][13][13] = {
//第零层
{{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 5, 10,10,10,10, 2, 10, 10, 10, 10, 5, 27 },
{ 27, 5, 10,10,10,10, 0, 10, 10, 10, 10, 5, 27 },
{ 27, 5, 10,10,10,10, 0, 10, 10, 10, 10, 5, 27 },
{ 27, 5, 10,10,10,10, 0, 10, 10, 10, 10, 5, 27 },
{ 27, 5, 10,10,10,10, 0, 10, 10, 10, 10, 5, 27 },
{ 27, 5, 10,10,10,10, 0, 10, 10, 10, 10, 5, 27 },
{ 27, 5, 5, 10,10,10, 0, 10, 10, 10, 5, 5, 27 },
{ 27, 5, 5, 5, 5, 5, 8, 5, 5, 5, 5, 5, 27 },
{ 27, 1, 5, 1, 5, 0, 68, 0, 5, 1, 5, 1, 27 },
{ 27, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 27 },
{ 27, 27,27,27,27,27, 27, 27, 27, 27, 27, 27, 27 }},

//第一层
{{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 2, 11, 7, 15, 7, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 27 },
{ 27, 3, 0, 20, 8, 0, 5, 32, 11, 11, 5, 0, 27 },
{ 27, 11, 20, 32, 5, 0, 5, 30, 3, 3, 5, 0, 27 },
{ 27, 5, 8, 5, 5, 0, 5, 5, 5, 8, 5, 0, 27 },
{ 27, 11, 0, 0, 5, 0, 8, 6, 9, 6, 5, 0, 27 },
{ 27, 30, 21, 16, 5, 0, 5, 5, 5, 5, 5, 0, 27 },
{ 27, 5, 8, 5, 5, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 21, 0, 5, 5, 8, 5, 5, 5, 8, 5, 27 },
{ 27, 3, 24, 11, 5, 11, 4, 0, 5, 0, 6, 0, 27 },
{ 27, 3, 23, 11, 5, 0, 12, 0, 5, 7, 24, 7, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 }},

//第二层
{{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27,12, 5, 0, 18, 0, 5, 32, 30, 11, 14, 5, 27 },
{ 27, 4, 5, 30, 5, 24, 5, 32, 30, 11, 16, 5, 27 },
{ 27, 0, 5, 11, 5, 11, 5, 32, 30, 11, 19, 5, 27 },
{ 27, 0, 5, 11, 5, 11, 5, 5, 5, 5, 8, 5, 27 },
{ 27, 0, 5, 0, 5, 0, 0, 0, 8, 0, 0, 5, 27 },
{ 27, 0, 5, 8, 5, 5, 8, 5, 5, 8, 5, 5, 27 },
{ 27, 0, 13, 0, 0, 0, 0, 5, 0, 19, 0, 5, 27 },
{ 27, 0, 5, 8, 5, 5, 26, 5, 17, 5, 17, 5, 27 },
{ 27, 0, 5, 11, 5, 24, 3, 5, 0, 5, 0, 5, 27 },
{ 27, 0, 5, 11, 5, 24, 3, 5, 0, 5, 0, 5, 27 },
{ 27, 2, 5, 32, 5, 24, 3, 5, 22, 5, 25, 5, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 }},

//第三层
{{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27,38, 15, 11, 5, 33, 29, 31, 5, 5, 5, 5, 27 },
{ 27, 15, 11, 0, 5, 0, 0, 0, 5, 0, 6, 0, 27 },
{ 27, 11, 20, 0, 5, 5, 8, 5, 5, 0, 5, 0, 27 },
{ 27, 5, 8, 5, 5, 0, 20, 0, 5, 11, 5, 15, 27 },
{ 27, 0, 0, 0, 5, 5, 5, 0, 5, 11, 5, 6, 27 },
{ 27, 7, 5, 0, 6, 15, 6, 0, 5, 11, 5, 15, 27 },
{ 27, 7, 5, 5, 5, 5, 5, 0, 0, 0, 5, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 5, 5, 8, 5, 5, 0, 27 },
{ 27, 5, 5, 5, 5, 6, 5, 15, 0, 15, 5, 0, 27 },
{ 27, 5, 0, 0, 0, 0, 5, 30, 6, 11, 5, 0, 27 },
{ 27, 12, 4, 5, 5, 5, 5, 32, 24, 11, 5, 2, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 }},

//第四层
{{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27,0, 36, 0, 5, 0, 39, 0, 5, 0, 36, 0, 27 },
{ 27, 8, 5, 8, 5, 0, 0, 0, 5, 8, 5, 8, 27 },
{ 27, 0, 5, 0, 5, 5, 17, 5, 5, 0, 5, 0, 27 },
{ 27, 0, 5, 20, 5, 37, 34, 37, 5, 20, 5, 0, 27 },
{ 27, 6, 5, 3, 5, 30, 37, 30, 5, 3, 5, 6, 27 },
{ 27, 6, 5, 3, 5, 5, 28, 5, 5, 3, 5, 6, 27 },
{ 27, 15, 5, 0, 5, 40, 35, 40, 5, 0, 5, 15, 27 },
{ 27, 0, 5, 0, 5, 32, 40, 32, 5, 0, 5, 0, 27 },
{ 27, 0, 5, 0, 5, 5, 26, 5, 5, 0, 5, 0, 27 },
{ 27, 0, 5, 0, 5, 11, 0, 11, 5, 0, 5, 4, 27 },
{ 27, 2, 5, 0, 36, 0, 0, 0, 36, 0, 5, 12, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 }},

//第五层
{{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 62, 5, 3, 5, 24, 9, 0, 0, 9, 11, 16, 27 },
{ 27, 0, 5, 32, 5, 9, 0, 0, 0, 0, 9, 11, 27 },
{ 27, 37, 5, 0, 5, 21, 0, 5, 5, 8, 5, 5, 27 },
{ 27, 0, 8, 9, 5, 65, 21, 5, 0, 40, 21, 25, 27 },
{ 27, 37, 5, 0, 5, 5, 5, 5, 0, 0, 0, 21, 27 },
{ 27, 32, 5, 0, 0, 0, 6, 20, 0, 0, 0, 0, 27 },
{ 27, 30, 5, 5, 36, 5, 5, 5, 5, 0, 0, 0, 27 },
{ 27, 0, 22, 5, 36, 5, 0, 0, 0, 40, 35, 0, 27 },
{ 27, 5, 5, 5, 6, 5, 8, 5, 26, 5, 8, 5, 27 },
{ 27, 4, 0, 5, 0, 5, 6, 5, 30, 8, 0, 5, 27 },
{ 27, 12, 0, 6, 0, 0, 0, 5,11, 5, 2, 5, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 }},

//第六层
{{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 60, 43, 5, 30, 5, 11, 44, 45, 5, 24, 24, 27 },
{ 27, 43, 11, 5, 32, 5, 0, 11, 44, 5, 51, 24, 27 },
{ 27, 11, 34, 26,0, 26, 34, 0, 11, 5, 0, 51, 27 },
{ 27, 0, 0, 5, 35, 5, 0, 0, 0, 5, 42, 0, 27 },
{ 27, 5, 5, 5, 28, 5, 5, 5, 5, 5, 8, 5, 27 },
{ 27, 0, 0, 41, 0, 11, 11, 11, 0, 41, 0, 0, 27 },
{ 27, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 27 },
{ 27, 0, 5, 37, 8, 37, 0, 0, 0, 0, 0, 5, 27 },
{ 27, 0, 5, 8, 5, 8, 5, 5, 5, 5, 26, 5, 27 },
{ 27, 0, 5, 37, 5, 0, 0, 5, 5, 0, 4, 5, 27 },
{ 27, 0, 0, 0, 5, 2, 0, 8, 8, 0, 12, 5, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 }},

//第七层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 2, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 27 },
{ 27, 5, 5, 0, 34, 5, 26, 5, 43, 0, 5, 5, 27 },
{ 27, 5, 0, 34, 30, 5, 35, 5, 32, 43, 0, 5, 27 },
{ 27, 0, 0, 5, 5, 5, 17, 5, 5, 5, 0, 0, 27 },
{ 27, 0, 0, 26, 35, 17, 46, 17, 35, 26, 0, 0, 27 },
{ 27, 0, 5, 5, 5, 5, 17, 5, 5, 5, 5, 0, 27 },
{ 27, 0, 5, 3, 32, 5, 35, 5, 30, 3, 5, 0, 27 },
{ 27, 0, 5, 11, 3, 5, 26, 5, 3, 11, 5, 0, 27 },
{ 27, 0, 5, 5, 16, 16, 24, 16, 16, 5, 5, 0, 27 },
{ 27, 0, 0, 5, 5, 5, 28, 5, 5, 5, 0, 0, 27 },
{ 27, 5, 0, 0, 8, 12, 4, 0, 8, 0, 0, 5, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第八层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 12, 5, 0, 0, 0, 0, 5, 0, 11, 43, 0, 27 },
{ 27, 4, 5, 0, 5, 5, 8, 5, 8, 5, 5, 0, 27 },
{ 27, 0, 5, 0, 5, 0, 0, 26, 0, 0, 5, 32, 27 },
{ 27, 0, 5, 0, 5, 48, 5, 5, 5, 37, 5, 36, 27 },
{ 27, 37, 5, 0, 5, 3, 5, 2, 0, 0, 5, 36, 27 },
{ 27, 34, 5, 30, 5, 3, 5, 5, 5, 5, 5, 0, 27 },
{ 27, 37, 5, 36, 5, 0, 0, 0, 5, 0, 34, 0, 27 },
{ 27, 0, 5, 36, 5, 5, 5, 32, 5, 8, 5, 5, 27 },
{ 27, 0, 5, 0, 43, 0, 5, 43, 5, 0, 0, 0, 27 },
{ 27, 0, 5, 5, 5, 8, 5, 0, 5, 5, 5, 0, 27 },
{ 27, 0, 0, 48, 0, 0, 5, 0, 44, 0, 44, 35, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第九层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 50, 11, 0, 5, 5, 5, 0, 0, 0, 5, 0, 27 },
{ 27, 11, 0, 49, 8, 0, 0, 0, 5, 0, 8, 43, 27 },
{ 27, 5, 8, 5, 5, 0, 5, 5, 5, 0, 5, 11, 27 },
{ 27, 0, 0, 0, 5, 0, 5, 4, 0, 0, 5, 11, 27 },
{ 27, 0, 0, 0, 28, 0, 5, 12, 5, 0, 5, 3, 27 },
{ 27, 5, 26, 5, 5, 0, 5, 5, 5, 0, 5, 5, 27 },
{ 27, 30, 42, 32, 5, 48, 5, 2, 5, 0, 5, 3, 27 },
{ 27, 5, 8, 5, 5, 0, 0, 0, 8, 0, 5, 11, 27 },
{ 27, 43, 3, 43, 5, 5, 26, 5, 5, 0, 5, 11, 27 },
{ 27, 16, 43, 3, 5, 51, 48, 51, 5, 0, 8, 43, 27 },
{ 27, 38, 16, 43, 8, 24, 51, 24, 5, 0, 5, 0, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第十层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 0, 5, 5, 30, 49, 5, 49, 32, 5, 5, 0, 27 },
{ 27, 0, 0, 5, 5, 8, 5, 8, 5, 5, 0, 42, 27 },
{ 27, 0, 0, 0, 0, 0, 5, 0, 0, 0, 42, 24, 27 },
{ 27, 0, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 27 },
{ 27, 37, 5, 0, 0, 11, 11, 11, 0, 0, 5, 11, 27 },
{ 27, 34, 5, 0, 5, 5, 5, 5, 8, 5, 5, 11, 27 },
{ 27, 37, 5, 0, 17, 4, 12, 5, 0, 8, 34, 0, 27 },
{ 27, 0, 5, 5, 5, 5, 5, 5, 8, 5, 5, 0, 27 },
{ 27, 0, 5, 3, 30, 32, 5, 0, 34, 0, 5, 11, 27 },
{ 27, 0, 5, 3, 30, 32, 28, 48, 5, 48, 5, 11, 27 },
{ 27, 2, 5, 3, 30, 32, 5, 16, 5, 16, 5, 3, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第十一层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 3, 5, 11, 5, 16, 5, 14, 5, 24, 55, 24, 27 },
{ 27, 3, 5, 11, 5, 16, 5, 14, 5, 53, 52, 53, 27 },
{ 27, 3, 5, 11, 5, 16, 5, 14, 5, 0, 53, 0, 27 },
{ 27, 8, 5, 8, 5, 8, 5, 8, 5, 5, 26, 5, 27 },
{ 27, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 27 },
{ 27, 8, 5, 5, 26, 5, 5, 5, 26, 5, 5, 8, 27 },
{ 27, 30, 5, 0, 53, 24, 54, 24, 53, 0, 5, 32, 27 },
{ 27, 30, 5, 49, 5, 5, 5, 5, 5, 49, 5, 32, 27 },
{ 27, 30, 5, 49, 5, 33, 29, 31, 5, 49, 5, 32, 27 },
{ 27, 5, 5, 28, 5, 3, 0, 3, 5, 28, 5, 5, 27 },
{ 27, 12, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第十二层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 25, 30, 5, 0, 19, 18, 19, 0, 5, 24, 60, 27 },
{ 27, 32, 0, 5, 0, 5, 8, 5, 0, 5, 0, 24, 27 },
{ 27, 0, 0, 5, 0, 5, 18, 5, 0, 5, 0, 0, 27 },
{ 27, 0, 54, 5, 0, 5, 11, 5, 0, 5, 57, 0, 27 },
{ 27, 54, 56, 5, 0, 5, 11, 5, 0, 5, 58, 57, 27 },
{ 27, 5, 26, 5, 0, 5, 3, 5, 0, 5, 26, 5, 27 },
{ 27, 0, 0, 0, 0, 5, 3, 5, 0, 0, 0, 0, 27 },
{ 27, 5, 5, 5, 0, 5, 5, 5, 0, 5, 5, 5, 27 },
{ 27, 30, 54, 8, 53, 53, 52, 53, 53, 8, 54, 32, 27 },
{ 27, 5, 5, 5, 5, 5, 26, 5, 5, 5, 5, 5, 27 },
{ 27, 2, 0, 0, 0, 0, 0, 0, 0, 0, 4, 12, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第十三层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 0, 54, 0, 0, 0, 0, 0, 5, 0, 56, 0, 27 },
{ 27, 0, 5, 5, 5, 5, 5, 8, 5, 0, 5, 0, 27 },
{ 27, 0, 5, 0, 0, 53, 0, 0, 5, 0, 5, 0, 27 },
{ 27, 24, 5, 28, 5, 5, 5, 0, 5, 0, 5, 0, 27 },
{ 27, 19, 5, 0, 0, 56, 5, 53, 5, 32, 5, 0, 27 },
{ 27, 18, 5, 0, 66, 17, 5, 52, 5, 32, 5, 0, 27 },
{ 27, 19, 5, 56, 17, 22, 5, 53, 5, 32, 5, 30,27 },
{ 27, 0, 5, 5, 5, 5, 5, 0, 5, 0, 5, 30, 27 },
{ 27, 0, 19, 0, 5, 0, 0, 0, 56, 0, 5, 30, 27 },
{ 27, 5, 5, 0, 5, 24, 5, 5, 5, 5, 5, 0, 27 },
{ 27, 12, 4, 0, 26, 0, 2, 5, 0, 0, 8, 0, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第十四层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 5, 0, 57, 62, 2, 0, 0, 0, 0, 0, 5, 27 },
{ 27, 5, 0, 24, 5, 5, 5, 5, 5, 24, 0, 5, 27 },
{ 27, 5, 0, 5, 5, 5, 5, 5, 5, 5, 0, 5, 27 },
{ 27, 5, 0, 5, 5, 5, 61, 5, 5, 5, 0, 5, 27 },
{ 27, 5, 0, 5, 5, 5, 17, 5, 5, 5, 0, 5, 27 },
{ 27, 5, 0, 3, 5, 5, 56, 5, 5, 3, 0, 5, 27 },
{ 27, 5, 0, 10, 10, 5, 66, 5, 10, 10, 0, 5, 27 },
{ 27, 5, 0, 10, 10, 5, 56, 5, 10, 10, 0, 5, 27 },
{ 27, 5, 0, 10, 10, 5, 26, 5, 10, 10, 0, 5, 27 },
{ 27, 5, 53, 52, 53, 26, 4, 26, 53, 52, 53, 5, 27 },
{ 27, 5, 5, 5, 5, 5, 12, 5, 5, 5, 5, 5, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第十五层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 5, 10, 2, 10, 5, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 5, 63, 67, 67, 5, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 5, 67, 67, 67, 5, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 5, 67, 67, 67, 5, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 5, 10, 0, 10, 5, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 5, 10, 0, 10, 5, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 5, 10, 0, 10, 5, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 5, 10, 4, 10, 5, 1, 1, 1, 27 },
{ 27, 1, 1, 1, 1, 1, 12, 1, 1, 1, 1, 1, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第十六层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 27 },
{ 27, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 27 },
{ 27, 10, 10, 10, 10, 10, 64, 10, 10, 10, 10, 10, 27 },
{ 27, 10, 10, 10, 10, 10, 0, 10, 10, 10, 10, 10, 27 },
{ 27, 10, 10, 10, 10, 10, 0, 10, 10, 10, 10, 10, 27 },
{ 27, 10, 10, 10, 10, 10, 0, 10, 10, 10, 10, 10, 27 },
{ 27, 10, 10, 10, 10, 10, 0, 10, 10, 10, 10, 10, 27 },
{ 27, 10, 10, 10, 10, 10, 0, 10, 10, 10, 10, 10, 27 },
{ 27, 10, 10, 10, 10, 10, 0, 10, 10, 10, 10, 10, 27 },
{ 27, 10, 10, 10, 10, 10, 4, 10, 10, 10, 10, 10, 27 },
{ 27, 10, 10, 10, 10, 10, 12, 10, 10, 10, 10, 10, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//视情况做不做
//第十七层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第十八层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第十九层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

//第二十层
{ { 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27 },
{ 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27 } },

	};
	for (w=0;w<24;w++)
	{
		for (i = 0; i < 13; i++)
		{
			for (j = 0; j < 13; j++)
			{
				Dtmap1[w][i][j] = Dtmap[w][i][j];
			}
		}
	}

}

//剧情确认
void confirm()
{
	while (1)
	{
		if (GetAsyncKeyState(VK_SPACE) & 0x8000)
		{
			
			plot_state++;
			break;
		}
	}
}

//剧情对话
int plot(int a)
{
	void putImage();
	switch (a)
	{
		//仙子
	case 68:
		BeginBatchDraw();
		while (1)
		{
			
			switch (plot_state)
			{
			case 0:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 218, _T("……"));
				break;

			case 1:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 218,_T("你醒了!"));
				break;

			case 2:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[94]);
				outtextxy(110, 212, _T("……"));
				outtextxy(110, 223, _T("你是谁?我在哪里?"));
				break;

			case 3:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 215, _T("我是这里的仙子,刚"));
				outtextxy(120, 230, _T("才你被这里的小怪"));
				outtextxy(120,245,_T("打昏了。"));
				break;

			case 4:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[94]);
				outtextxy(110, 212, _T("剑，剑，我的剑呢？"));
				break;

			case 5:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 215, _T("你的剑被他们抢走了,"));
				outtextxy(120, 230, _T("我只来得及将你救出"));
				outtextxy(120, 245, _T("来。"));
				break;

			case 6:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[94]);
				outtextxy(110, 212, _T("那,公主呢？我是来救"));
				outtextxy(110, 223, _T("公主的。"));
				break;

			case 7:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 215, _T("公主还在里面,你这"));
				outtextxy(120, 230, _T("样进来是打不过里面"));
				outtextxy(120, 245, _T("的魔王的。"));
				break;

			case 8:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[94]);
				outtextxy(110, 212, _T("那我怎么办？我答应"));
				outtextxy(110, 223, _T("了国王一定要把公主。"));
				outtextxy(110, 234, _T("救出来的。"));
				break;

			case 9:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 215, _T("放心吧，我把我的力"));
				outtextxy(120, 230, _T("量借给你，你就可以"));
				outtextxy(120, 245, _T("打赢魔王了。"));
				break;

			case 10:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 215, _T("不过你得先找一样东"));
				outtextxy(120, 230, _T("西。"));
				break;

			case 11:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[94]);
				outtextxy(110, 212, _T("找东西，什么东西？"));
				break;

			case 12:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 215, _T("是一个十字架，中"));
				outtextxy(120, 230, _T("间有一颗红宝石。"));
				break;

			case 13:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 215, _T("我的力量被魔王封印"));
				outtextxy(120, 230, _T("在圣光十字架里面,"));
				outtextxy(120, 245, _T("如果找到并带给我"));
				break;

			case 14:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 215, _T("我的魔力就会恢复，"));
				outtextxy(120, 230, _T("到那时我便可以把"));
				outtextxy(120, 245, _T("力量借给你救公主"));
				break;

			case 15:
				settextstyle(9, 7, 0);
				putimage(20, 200, &f[93]);
				outtextxy(120, 215, _T("快去吧别耽误时间了"));
				break;

			default:
				settextstyle(12, 8, _T("黑体"));
				plot_state = 0;
				return 1;
			}

 		


			
			
			FlushBatchDraw();
			
			Sleep(150);
			confirm();
   		}
		break;

		//魔王
		case 67:
			BeginBatchDraw();
			while (1)
			{
				switch (plot_state)
				{
				case 0:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[95]);
					outtextxy(110, 212, _T("……"));
					break;

				case 1:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[95]);
					outtextxy(110, 212, _T("停止吧!愚蠢的人类!"));
					break;

				case 2:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[94]);
					outtextxy(110, 212, _T("该停止的是你!魔王"));
					outtextxy(110, 223, _T("快说,公主关在哪里?"));
					break;

				case 3:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[95]);
					outtextxy(110, 212, _T("公主就在我身后的房"));
					outtextxy(110, 223, _T("间，想救公主就打败"));
					outtextxy(110, 234, _T("我吧！"));
					break;

				

				default:
					putImage();
					settextstyle(12, 8, _T("黑体"));
					plot_state = 0;
					return 1;
				}






				FlushBatchDraw();

				Sleep(150);
				confirm();
			}
			break;

			//公主
		case 64:
			BeginBatchDraw();
			while (1)
			{
				switch (plot_state)
				{
				case 0:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[94]);
					outtextxy(110, 212, _T("公主我来救你了！"));
					break;

				case 1:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[96]);
					outtextxy(110, 210, _T("太好了你终于来了，"));
					outtextxy(110, 221, _T("这里实在是太可怕了"));
					break;

				case 2:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[94]);
					outtextxy(110, 212, _T("公主放心吧，魔王已"));
					outtextxy(110, 223, _T("经被我打败了，我带"));
					outtextxy(110, 234, _T("您回国王身边！"));
					break;

				
				default:
					putImage();
					settextstyle(12, 8, _T("黑体"));
					plot_state = 0;
					return 1;
				}






				FlushBatchDraw();

				Sleep(150);
				confirm();
			}
			break;

			//十字架
		case 46:
			BeginBatchDraw();
			while (1)
			{
				switch (plot_state)
				{
				case 0:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[94]);
					outtextxy(110, 212, _T("这应该就是仙子所说"));
					outtextxy(110, 223, _T("的圣光十字架了！"));
					break;

				case 1:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[94]);
					outtextxy(110, 212, _T("只要把它带给仙子，"));
					outtextxy(110, 223, _T("仙子就能恢复魔力借"));
					outtextxy(110, 234, _T("给我力量打败魔王！"));
					break;

				default:
					//putImage();
					settextstyle(12, 8, _T("黑体"));
					plot_state = 0;
					return 1;
				}






				FlushBatchDraw();

				Sleep(150);
				confirm();
			}
			break;

			//十字架仙子
		case 69:
			BeginBatchDraw();
			while (1)
			{
				switch (plot_state)
				{
				case 0:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[93]);
					outtextxy(120, 215, _T("....."));
					break;

				case 1:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[94]);
					outtextxy(110, 212, _T("仙子，我已经将那个"));
					outtextxy(110, 223, _T("十字架找到了。"));
					break;

				case 2:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[93]);
					outtextxy(120, 215, _T("你做得很好。那么，"));
					outtextxy(120, 230, _T("现在我就开始授与你"));
					outtextxy(120, 245, _T("更强的力量!"));
					break;
				case 3:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[93]);
					outtextxy(120, 215, _T("巴啦啦能量，能量输"));
					outtextxy(120, 230, _T("送！"));
					break;

				case 4:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[93]);
					outtextxy(120, 215, _T("好了，我已经将力量"));
					outtextxy(120, 230, _T("借给你了！"));
					break;

				case 5:
					settextstyle(9, 7, 0);
					putimage(20, 200, &f[93]);
					outtextxy(120, 215, _T("记住，没有足够的力"));
					outtextxy(120, 230, _T("量不要去挑战魔王！"));
					break;

				default:
					//putImage();
					settextstyle(12, 8, _T("黑体"));
					plot_state = 0;
					return 1;
				}






				FlushBatchDraw();

				Sleep(150);
				confirm();
			}
			break;
	}
	
}


//加载资源
void GetImage()
{
	loadimage(&a, _T("资源\\墙.jpg"));
	loadimage(&b, _T("资源\\黄门.jpg"));
	loadimage(&c, _T("资源\\楼梯_上.jpg"));
	loadimage(&d, _T("资源\\1.1.png"));
	loadimage(&e, _T("资源\\黄钥匙.jpg"));
	loadimage(&f[0], _T("资源\\红药水.jpg"));
	loadimage(&f[1], _T("资源\\红头怪.jpg"));
	loadimage(&f[2], _T("资源\\绿头怪.jpg"));
	loadimage(&f[3], _T("资源\\蓝药水.jpg"));
	loadimage(&f[4], _T("资源\\小蝙蝠.jpg"));
	loadimage(&f[5], _T("资源\\蓝水晶.jpg"));
	loadimage(&f[6], _T("资源\\红水晶.jpg"));
	loadimage(&f[7], _T("资源\\圣光辉.jpg"));
	loadimage(&f[8], _T("资源\\骷髅人.jpg"));
	loadimage(&f[9], _T("资源\\骷髅士兵.jpg"));
	loadimage(&f[10], _T("资源\\地板.jpg"));
	loadimage(&f[11], _T("资源\\初级法师.jpg"));
	loadimage(&f[12], _T("资源\\状态栏1.jpg"));
	loadimage(&f[13], _T("资源\\圣光辉-对话框.jpg"),280,80);
	loadimage(&f[14], _T("资源\\怪物数据.jpg"));
	loadimage(&f[15], _T("资源\\3l商店.jpg"));
	loadimage(&f[16], _T("资源\\楼梯_下.jpg"));
	loadimage(&f[17], _T("资源\\星空.jpg"));
	loadimage(&f[18], _T("资源\\铁剑.jpg"));
	loadimage(&f[19], _T("资源\\岩浆.jpg"));
	loadimage(&f[20], _T("资源\\青门.jpg"));
	loadimage(&f[21], _T("资源\\红钥匙.jpg"));
	loadimage(&f[22], _T("资源\\蓝钥匙.jpg"));
	loadimage(&f[23], _T("资源\\牢门.jpg"));
	loadimage(&f[24], _T("资源\\金队长.jpg"));
	loadimage(&f[25], _T("资源\\金卫士.jpg"));
	loadimage(&f[26], _T("资源\\老者.jpg"));
	loadimage(&f[27], _T("资源\\商人.jpg"));
	loadimage(&f[28], _T("资源\\蓝门.jpg"));
	loadimage(&f[29], _T("资源\\紫地板.jpg"));
	loadimage(&f[30], _T("资源\\红门.jpg"));
	loadimage(&f[31], _T("资源\\商店.jpg"));
	loadimage(&f[32], _T("资源\\商店左.jpg"));
	loadimage(&f[33], _T("资源\\商店右.jpg"));
	loadimage(&f[34], _T("资源\\大蝙蝠.jpg"));
	loadimage(&f[35], _T("资源\\红蝙蝠.jpg"));
	loadimage(&f[36], _T("资源\\初级卫兵.jpg"));
	loadimage(&f[37], _T("资源\\青头怪.jpg"));
	loadimage(&f[38], _T("资源\\小偷.jpg"));
	loadimage(&f[39], _T("资源\\兽面人.jpg"));
	loadimage(&f[40], _T("资源\\高级法师.jpg"));
	loadimage(&f[41], _T("资源\\红衣法师.jpg"));
	loadimage(&f[42], _T("资源\\骷髅队长.jpg"));
	loadimage(&f[43], _T("资源\\怪王.jpg"));
	loadimage(&f[44], _T("资源\\金块.jpg"));
	loadimage(&f[45], _T("资源\\幸运十字架.jpg"));
	loadimage(&f[46], _T("资源\\白衣武士.jpg"));
	loadimage(&f[47], _T("资源\\麻衣法师.jpg"));
	loadimage(&f[48], _T("资源\\兽面武士.jpg"));
	loadimage(&f[49], _T("资源\\风之罗盘.jpg"));
	loadimage(&f[50], _T("资源\\石头怪人.jpg"));
	loadimage(&f[51], _T("资源\\高级卫兵.jpg"));
	loadimage(&f[52], _T("资源\\冥卫兵.jpg"));
	loadimage(&f[53], _T("资源\\双手剑士.jpg"));
	loadimage(&f[54], _T("资源\\骑士盾.jpg"));
	loadimage(&f[55], _T("资源\\冥战士.jpg"));
	loadimage(&f[56], _T("资源\\灵武士.jpg"));
	loadimage(&f[57], _T("资源\\灵法师.jpg"));
	loadimage(&f[58], _T("资源\\镐子.jpg"));
	loadimage(&f[59], _T("资源\\飞羽.jpg"));
	loadimage(&f[60], _T("资源\\双倍药水.jpg"));
	loadimage(&f[61], _T("资源\\钥匙盒.jpg"));
	loadimage(&f[62], _T("资源\\魔龙.jpg"),96,96);
	loadimage(&f[63], _T("资源\\公主.jpg"));
	loadimage(&f[64], _T("资源\\铁盾.jpg"));
	loadimage(&f[65], _T("资源\\冥队长.jpg"));
	loadimage(&f[66], _T("资源\\风之罗盘对话框.jpg"),280,80);
	loadimage(&f[67], _T("资源\\3l商店1.jpg"), 250, 180);
	loadimage(&f[68], _T("资源\\3l商店2.jpg"), 250, 180);
	loadimage(&f[69], _T("资源\\3l商店3.jpg"), 250, 180);
	loadimage(&f[70], _T("资源\\3l商店4.jpg"), 250, 180);
	loadimage(&f[71], _T("资源\\11l商店1.jpg"), 250, 180);
	loadimage(&f[72], _T("资源\\11l商店2.jpg"), 250, 180);
	loadimage(&f[73], _T("资源\\11l商店3.jpg"), 250, 180);
	loadimage(&f[74], _T("资源\\11l商店4.jpg"), 250, 180);
	loadimage(&f[75], _T("资源\\对话框-小偷.jpg"), 280, 80);
	loadimage(&f[76], _T("资源\\5l老者1.jpg"), 250, 180);
	loadimage(&f[77], _T("资源\\5l老者2.jpg"), 250, 180);
	loadimage(&f[78], _T("资源\\5l老者3.jpg"), 250, 180);
	loadimage(&f[79], _T("资源\\5l老者4.jpg"), 250, 180);
	loadimage(&f[80], _T("资源\\13l老者1.jpg"), 250, 180);
	loadimage(&f[81], _T("资源\\13l老者2.jpg"), 250, 180);
	loadimage(&f[82], _T("资源\\13l老者3.jpg"), 250, 180);
	loadimage(&f[83], _T("资源\\13l老者4.jpg"), 250, 180);
	loadimage(&f[84], _T("资源\\5l商人1.jpg"), 250, 180);
	loadimage(&f[85], _T("资源\\5l商人2.jpg"), 250, 180);
	loadimage(&f[86], _T("资源\\5l商人3.jpg"), 250, 180);
	loadimage(&f[87], _T("资源\\5l商人4.jpg"), 250, 180);
	loadimage(&f[88], _T("资源\\12l商人1.jpg"), 250, 180);
	loadimage(&f[89], _T("资源\\12l商人2.jpg"), 250, 180);
	loadimage(&f[90], _T("资源\\12l商人3.jpg"), 250, 180);
	loadimage(&f[91], _T("资源\\12l商人4.jpg"), 250, 180);
	loadimage(&f[92], _T("资源\\仙子.jpg"));
	loadimage(&f[93], _T("资源\\对话框-仙子.jpg"),230,70);
	loadimage(&f[94], _T("资源\\对话框-勇士.jpg"),230,70);
	loadimage(&f[95], _T("资源\\对话框-魔龙.jpg"), 230, 70);
	loadimage(&f[96], _T("资源\\对话框-公主.jpg"), 230, 70);
	loadimage(&g[0], _T("资源\\封面-0.jpg"),541,416);
	loadimage(&g[1], _T("资源\\封面-1.jpg"),541,416);
	loadimage(&g[2], _T("资源\\封面-2.jpg"),541,416);
	loadimage(&g[3], _T("资源\\封面-3.jpg"),541,416);
	loadimage(&g[4], _T("资源\\简介.jpg"), 541, 416);
	loadimage(&h[0], _T("资源\\对战.jpg"),416,200);
	loadimage(&h[1], _T("资源\\魔龙.jpg"), 32, 32);
	loadimage(&h[2], _T("资源\\终.jpg"),541,416);
}

//菜单
void drawMenu(int c)
{
	putimage(0, 0, &g[c]);
}


//资源重载
void putImage()
{
	setcolor(BLACK);
	setfillcolor(BLACK);
	fillrectangle(0, 0, 416, 416);
	for (i = 0; i < 13; i++)
	{
		for (j = 0; j < 13; j++)
		{
			if (Dtmap1[w][i][j] == 0)//地板
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[10]);
			}

			if (Dtmap1[w][i][j]==1)//岩浆
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[19]);
			}

			if (Dtmap1[w][i][j] == 2)//画楼梯上
			{
				putimage(0 + 32 * j, 0 + 32 * i, &c);
			}

			if (Dtmap1[w][i][j] == 3)//红药水
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[0]);
			}

			if (Dtmap1[w][i][j] == 4)//画玩家
			{
				putimage(0 + 32 * j, 0 + 32 * i, 32, 32, &d, 0 + 32 * z, 0 + 32 * v);
			}

			if (Dtmap1[w][i][j] == 5)//画墙
			{
				putimage(0 + 32 * j, 0 + 32 * i, &a);
			}

			if (Dtmap1[w][i][j] == 6)//小蝙蝠
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[4]);
			}

			if (Dtmap1[w][i][j] == 7)//绿头怪
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[2]);
			}

			if (Dtmap1[w][i][j] == 8)//画黄门
			{
				putimage(0 + 32 * j, 0 + 32 * i, &b);
			}

			if (Dtmap1[w][i][j] == 9)//初级法师
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[11]);
			}

			if (Dtmap1[w][i][j]==10)//星空
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[17]);
			}

			if (Dtmap1[w][i][j] == 11)//黄钥匙
			{
				putimage(0 + 32 * j, 0 + 32 * i, &e);
			}

			if (Dtmap1[w][i][j]==12)//楼梯-下
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[16]);
			}
			
			if (Dtmap1[w][i][j]==13)//青门
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[20]);
			}

			if (Dtmap1[w][i][j] == 14)//红钥匙
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[21]);
			}

			if (Dtmap1[w][i][j] == 15)//红头怪
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[1]);
			}
			
			if (Dtmap1[w][i][j] == 16)//蓝钥匙
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[22]);
			}

			if (Dtmap1[w][i][j] == 17)//牢门
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[23]);
			}

			if (Dtmap1[w][i][j] == 18)//金队长
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[24]);
			}

			if (Dtmap1[w][i][j] == 19)//金卫士
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[25]);
			}

			if (Dtmap1[w][i][j] == 20)//骷髅人
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[8]);
			}

			if (Dtmap1[w][i][j] == 21)//骷髅士兵
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[9]);
			}

			if (Dtmap1[w][i][j] == 22)//圣光辉
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[26]);
			}

			if (Dtmap1[w][i][j] == 23)//圣光辉
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[7]);
			}

			if (Dtmap1[w][i][j] == 24)//蓝药水
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[3]);
			}
			
			if (Dtmap1[w][i][j] == 25)//圣光辉
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[27]);
			}

			if (Dtmap1[w][i][j] == 26)//蓝门
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[28]);
			}

			if (Dtmap1[w][i][j] == 27)//紫地板
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[29]);
			}

			if (Dtmap1[w][i][j] == 28)//红门
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[30]);
			}

			if (Dtmap1[w][i][j] == 29)//商店
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[31]);
			}

			if (Dtmap1[w][i][j] == 30)//蓝水晶
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[5]);
			}

			if (Dtmap1[w][i][j] == 31)//商店右
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[33]);
			}

			if (Dtmap1[w][i][j] == 32)//红水晶
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[6]);
			}
			
			if (Dtmap1[w][i][j] == 33)//商店左
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[32]);
			}

			if (Dtmap1[w][i][j] == 34)//红蝙蝠
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[35]);
			}

			if (Dtmap1[w][i][j] == 35)//初级卫兵
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[36]);
			}

			if (Dtmap1[w][i][j] == 36)//青头怪
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[37]);
			}

			if (Dtmap1[w][i][j] == 37)//大蝙蝠
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[34]);
			}

			if (Dtmap1[w][i][j] == 38)//铁剑
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[18]);
			}

			if (Dtmap1[w][i][j] == 39)//小偷
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[38]);
			}

			if (Dtmap1[w][i][j] == 40)//兽面人
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[39]);
			}

			if (Dtmap1[w][i][j] == 41)//高级法师
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[40]);
			}

			if (Dtmap1[w][i][j] == 42)//红衣法师
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[41]);
			}

			if (Dtmap1[w][i][j] == 43)//骷髅队长
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[42]);
			}

			if (Dtmap1[w][i][j] == 44)//怪王
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[43]);
			}

			if (Dtmap1[w][i][j] == 45)//金块
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[44]);
			}

			if (Dtmap1[w][i][j] == 46)//幸运十字架
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[45]);
			}

			if (Dtmap1[w][i][j] == 47)//白衣武士
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[46]);
			}

			if (Dtmap1[w][i][j] == 48)//麻衣法师
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[47]);
			}

			if (Dtmap1[w][i][j] == 49)//兽面武士
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[48]);
			}

			if (Dtmap1[w][i][j] == 50)//风之罗盘
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[49]);
			}

			if (Dtmap1[w][i][j] == 51)//石头怪人
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[50]);
			}

			if (Dtmap1[w][i][j] == 52)//高级卫兵
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[51]);
			}

			if (Dtmap1[w][i][j] == 53)//冥卫兵
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[52]);
			}

			if (Dtmap1[w][i][j] == 54)//双手剑士
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[53]);
			}

			if (Dtmap1[w][i][j] == 55)//骑士盾
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[54]);
			}

			if (Dtmap1[w][i][j] == 56)//冥战士
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[55]);
			}

			if (Dtmap1[w][i][j] == 57)//灵武士
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[56]);
			}

			if (Dtmap1[w][i][j] == 58)//灵法师
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[57]);
			}

			if (Dtmap1[w][i][j] == 59)//镐子
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[58]);
			}

			if (Dtmap1[w][i][j] == 60)//飞羽
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[59]);
			}

			if (Dtmap1[w][i][j] == 61)//双倍药水
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[60]);
			}

			if (Dtmap1[w][i][j] == 62)//钥匙盒
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[61]);
			}

			if (Dtmap1[w][i][j] == 63)//魔龙
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[62]);
			}

			if (Dtmap1[w][i][j] == 64)//公主
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[63]);
			}

			if (Dtmap1[w][i][j] == 65)//铁盾
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[64]);
			}

			if (Dtmap1[w][i][j] == 66)//冥队长
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[65]);
			}

			if (Dtmap1[w][i][j] == 68)//仙子
			{
				putimage(0 + 32 * j, 0 + 32 * i, &f[92]);
			}
		}
	}
	setcolor(WHITE);
	line(32, 32, 384, 32);
	line(32, 32, 32, 384);
	line(384, 32, 384, 384);
	line(32, 384, 384, 384);
	
}


//对战状态判定
int  Battle_state(int atk1, int def1, int hp1, int atk2, int def2, int hp2)
{
	if (atk1 > def2);
	else return 0;
	if (hp1 > (atk2 - def1)*(hp2 / (atk1 - def2)))
	{
		return 1;
	}
	else return 0;
}


//对战
int Battle(int c)
{
	TCHAR S1[10], S2[10], S3[10], S4[10], S5[10], S6[10];
	int a=0;//怪物血量
	//int sum = 1;
	switch (c)
	{
	
		//小蝙蝠
	case 6:
		if (Battle_state(player.ack,player.def,player.hp,小蝙蝠.atk,小蝙蝠.def,小蝙蝠.hp))//小蝙蝠
		{
			a = 小蝙蝠.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[4]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 小蝙蝠.atk);//攻击
				_stprintf_s(S3, _T("%d"), 小蝙蝠.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack-小蝙蝠.def;
				if (player.def>= 小蝙蝠.atk)
				{
					player.hp -= 10;
				}
				else player.hp -=小蝙蝠.atk-player.def;
				
				if (a <= 0)
				{
					player.current_Experience += 小蝙蝠.exp;
					player.money += 小蝙蝠.gold;
					return 1;
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}

		else return 0;

		//绿头怪
	case 7:
		if (Battle_state(player.ack, player.def, player.hp, 绿头怪.atk, 绿头怪.def, 绿头怪.hp))//绿头怪
		{
			a = 绿头怪.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[2]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 绿头怪.atk);//攻击
				_stprintf_s(S3, _T("%d"), 绿头怪.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 绿头怪.def;
				if (player.def >= 绿头怪.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 绿头怪.atk - player.def;

				if (a <= 0)
				{
					player.current_Experience += 绿头怪.exp;
					player.money += 绿头怪.gold;
					
					return 1;
				}

				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//初级法师
	case 9:
		if (Battle_state(player.ack, player.def, player.hp, 初级法师.atk, 初级法师.def, 初级法师.hp))//初级法师
		{
			a = 初级法师.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[11]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 初级法师.atk);//攻击
				_stprintf_s(S3, _T("%d"), 初级法师.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 初级法师.def;
				if (player.def >= 初级法师.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 初级法师.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 初级法师.exp;
						player.money += 初级法师.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//红头怪
	case 15:
		if (Battle_state(player.ack, player.def, player.hp, 红头怪.atk, 红头怪.def, 红头怪.hp))//红头怪
		{
			a = 红头怪.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[1]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 红头怪.atk);//攻击
				_stprintf_s(S3, _T("%d"), 红头怪.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 红头怪.def;
				if (player.def >= 红头怪.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 红头怪.atk - player.def;
				if (a <= 0)
				{
					player.current_Experience += 红头怪.exp;
					player.money += 红头怪.gold;
					return 1;
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//金队长
	case 18:
		if (Battle_state(player.ack, player.def, player.hp, 金队长.atk, 金队长.def, 金队长.hp))//金队长
		{
			a = 金队长.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[24]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 金队长.atk);//攻击
				_stprintf_s(S3, _T("%d"), 金队长.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 金队长.def;
				if (player.def >= 金队长.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 金队长.atk - player.def;
				if (a <= 0)
				{
					player.current_Experience += 金队长.exp;
					player.money += 金队长.gold;
					return 1;
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//金卫士
	case 19:
		if (Battle_state(player.ack, player.def, player.hp, 金卫士.atk, 金卫士.def, 金卫士.hp))//金卫士
		{
			a = 金卫士.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[25]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 金卫士.atk);//攻击
				_stprintf_s(S3, _T("%d"), 金卫士.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 金卫士.def;
				if (player.def >= 金卫士.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 金卫士.atk - player.def;
				if (a <= 0)
				{
					player.current_Experience += 金卫士.exp;
					player.money += 金卫士.gold;
					return 1;
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//骷髅人
	case 20:
		if (Battle_state(player.ack, player.def, player.hp, 骷髅人.atk, 骷髅人.def, 骷髅人.hp))//骷髅人
		{
			a = 骷髅人.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[8]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 骷髅人.atk);//攻击
				_stprintf_s(S3, _T("%d"), 骷髅人.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 骷髅人.def;
				if (player.def >= 骷髅人.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 骷髅人.atk - player.def;
				if (a <= 0)
				{
					player.current_Experience += 骷髅人.exp;
					player.money += 骷髅人.gold;
					return 1;
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

	case 21:
		if (Battle_state(player.ack, player.def, player.hp, 骷髅士兵.atk, 骷髅士兵.def, 骷髅士兵.hp))//骷髅士兵
		{
			a = 骷髅士兵.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[9]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 骷髅士兵.atk);//攻击
				_stprintf_s(S3, _T("%d"), 骷髅士兵.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 骷髅士兵.def;
				if (player.def >= 骷髅士兵.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 骷髅士兵.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 骷髅士兵.exp;
						player.money += 骷髅士兵.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;
		
		//红蝙蝠
	case 34:
		if (Battle_state(player.ack, player.def, player.hp, 红蝙蝠.atk, 红蝙蝠.def, 红蝙蝠.hp))//红蝙蝠
		{
			a = 红蝙蝠.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[35]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 红蝙蝠.atk);//攻击
				_stprintf_s(S3, _T("%d"), 红蝙蝠.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 红蝙蝠.def;
				if (player.def >= 红蝙蝠.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 红蝙蝠.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 红蝙蝠.exp;
						player.money += 红蝙蝠.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//初级卫兵
	case 35:
		if (Battle_state(player.ack, player.def, player.hp, 初级卫兵.atk, 初级卫兵.def, 初级卫兵.hp))//初级卫兵
		{
			a = 初级卫兵.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[36]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 初级卫兵.atk);//攻击
				_stprintf_s(S3, _T("%d"), 初级卫兵.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 初级卫兵.def;
				if (player.def >= 初级卫兵.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 初级卫兵.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 初级卫兵.exp;
						player.money += 初级卫兵.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//青头怪
	case 36:
		if (Battle_state(player.ack, player.def, player.hp, 青头怪.atk, 青头怪.def, 青头怪.hp))//青头怪
		{
			a = 青头怪.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[37]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 青头怪.atk);//攻击
				_stprintf_s(S3, _T("%d"), 青头怪.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 青头怪.def;
				if (player.def >= 青头怪.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 青头怪.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 青头怪.exp;
						player.money += 青头怪.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//大蝙蝠
	case 37:
		if (Battle_state(player.ack, player.def, player.hp, 大蝙蝠.atk, 大蝙蝠.def, 大蝙蝠.hp))//大蝙蝠
		{
			a = 大蝙蝠.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[34]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 大蝙蝠.atk);//攻击
				_stprintf_s(S3, _T("%d"), 大蝙蝠.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 大蝙蝠.def;
				if (player.def >= 大蝙蝠.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 大蝙蝠.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 大蝙蝠.exp;
						player.money += 大蝙蝠.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//兽面人
	case 40:
		if (Battle_state(player.ack, player.def, player.hp, 兽面人.atk, 兽面人.def, 兽面人.hp))//兽面人
		{
			a = 兽面人.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[39]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 兽面人.atk);//攻击
				_stprintf_s(S3, _T("%d"), 兽面人.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 兽面人.def;
				if (player.def >= 兽面人.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 兽面人.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 兽面人.exp;
						player.money += 兽面人.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//高级法师
	case 41:
		if (Battle_state(player.ack, player.def, player.hp, 高级法师.atk, 高级法师.def, 高级法师.hp))//高级法师
		{
			a = 高级法师.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[40]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 高级法师.atk);//攻击
				_stprintf_s(S3, _T("%d"), 高级法师.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 高级法师.def;
				if (player.def >= 高级法师.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 高级法师.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 高级法师.exp;
						player.money += 高级法师.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//红衣法师
	case 42:
		if (Battle_state(player.ack, player.def, player.hp, 红衣法师.atk, 红衣法师.def, 红衣法师.hp))//红衣法师
		{
			a = 红衣法师.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[41]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 红衣法师.atk);//攻击
				_stprintf_s(S3, _T("%d"), 红衣法师.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 红衣法师.def;
				if (player.def >= 红衣法师.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 红衣法师.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 红衣法师.exp;
						player.money += 红衣法师.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//骷髅队长
	case 43:
		if (Battle_state(player.ack, player.def, player.hp, 骷髅队长.atk, 骷髅队长.def, 骷髅队长.hp))//骷髅队长
		{
			a = 骷髅队长.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[42]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 骷髅队长.atk);//攻击
				_stprintf_s(S3, _T("%d"), 骷髅队长.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 骷髅队长.def;
				if (player.def >= 骷髅队长.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 骷髅队长.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 骷髅队长.exp;
						player.money += 骷髅队长.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//怪王
	case 44:
		if (Battle_state(player.ack, player.def, player.hp, 怪王.atk, 怪王.def, 怪王.hp))//怪王
		{
			a = 怪王.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[43]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 怪王.atk);//攻击
				_stprintf_s(S3, _T("%d"), 怪王.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 怪王.def;
				if (player.def >= 怪王.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 怪王.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 怪王.exp;
						player.money += 怪王.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//白衣武士
	case 47:
		if (Battle_state(player.ack, player.def, player.hp, 白衣武士.atk, 白衣武士.def, 白衣武士.hp))//白衣武士
		{
			a = 白衣武士.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[46]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 白衣武士.atk);//攻击
				_stprintf_s(S3, _T("%d"), 白衣武士.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 白衣武士.def;
				if (player.def >= 白衣武士.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 白衣武士.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 白衣武士.exp;
						player.money += 白衣武士.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//麻衣法师
	case 48:
		if (Battle_state(player.ack, player.def, player.hp, 麻衣法师.atk, 麻衣法师.def, 麻衣法师.hp))//麻衣法师
		{
			a = 麻衣法师.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[47]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 麻衣法师.atk);//攻击
				_stprintf_s(S3, _T("%d"), 麻衣法师.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 麻衣法师.def;
				if (player.def >= 麻衣法师.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 麻衣法师.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 麻衣法师.exp;
						player.money += 麻衣法师.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//兽面武士
	case 49:
		if (Battle_state(player.ack, player.def, player.hp, 兽面武士.atk, 兽面武士.def, 兽面武士.hp))//兽面武士
		{
			a = 兽面武士.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[48]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 兽面武士.atk);//攻击
				_stprintf_s(S3, _T("%d"), 兽面武士.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 兽面武士.def;
				if (player.def >= 兽面武士.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 兽面武士.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 兽面武士.exp;
						player.money += 兽面武士.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//石头怪人
	case 51:
		if (Battle_state(player.ack, player.def, player.hp, 石头怪人.atk, 石头怪人.def, 石头怪人.hp))//石头怪人
		{
			a = 石头怪人.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[50]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 石头怪人.atk);//攻击
				_stprintf_s(S3, _T("%d"), 石头怪人.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 石头怪人.def;
				if (player.def >= 石头怪人.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 石头怪人.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 石头怪人.exp;
						player.money += 石头怪人.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//高级卫兵
	case 52:
		if (Battle_state(player.ack, player.def, player.hp, 高级卫兵.atk, 高级卫兵.def, 高级卫兵.hp))//高级卫兵
		{
			a = 高级卫兵.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[51]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 高级卫兵.atk);//攻击
				_stprintf_s(S3, _T("%d"), 高级卫兵.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 高级卫兵.def;
				if (player.def >= 高级卫兵.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 高级卫兵.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 高级卫兵.exp;
						player.money += 高级卫兵.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//冥卫兵
	case 53:
		if (Battle_state(player.ack, player.def, player.hp, 冥卫兵.atk, 冥卫兵.def, 冥卫兵.hp))//冥卫兵
		{
			a = 冥卫兵.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[52]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 冥卫兵.atk);//攻击
				_stprintf_s(S3, _T("%d"), 冥卫兵.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 冥卫兵.def;
				if (player.def >= 冥卫兵.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 冥卫兵.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 冥卫兵.exp;
						player.money += 冥卫兵.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//双手剑士
	case 54:
		if (Battle_state(player.ack, player.def, player.hp, 双手剑士.atk, 双手剑士.def, 双手剑士.hp))//双手剑士
		{
			a = 双手剑士.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[53]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 双手剑士.atk);//攻击
				_stprintf_s(S3, _T("%d"), 双手剑士.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 双手剑士.def;
				if (player.def >= 双手剑士.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 双手剑士.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 双手剑士.exp;
						player.money += 双手剑士.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//冥战士
	case 56:
		if (Battle_state(player.ack, player.def, player.hp, 冥战士.atk, 冥战士.def, 冥战士.hp))//冥战士
		{
			a = 冥战士.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[55]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 冥战士.atk);//攻击
				_stprintf_s(S3, _T("%d"), 冥战士.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 冥战士.def;
				if (player.def >= 冥战士.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 冥战士.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 冥战士.exp;
						player.money += 冥战士.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//灵武士
	case 57:
		if (Battle_state(player.ack, player.def, player.hp, 灵武士.atk, 灵武士.def, 灵武士.hp))//灵武士
		{
			a = 灵武士.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[56]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 灵武士.atk);//攻击
				_stprintf_s(S3, _T("%d"), 灵武士.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 灵武士.def;
				if (player.def >= 灵武士.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 灵武士.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 灵武士.exp;
						player.money += 灵武士.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//灵法师
	case 58:
		if (Battle_state(player.ack, player.def, player.hp, 灵法师.atk, 灵法师.def, 灵法师.hp))//灵法师
		{
			a = 灵法师.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[57]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 灵法师.atk);//攻击
				_stprintf_s(S3, _T("%d"), 灵法师.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 灵法师.def;
				if (player.def >= 灵法师.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 灵法师.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 灵法师.exp;
						player.money += 灵法师.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//冥队长
	case 66:
		if (Battle_state(player.ack, player.def, player.hp, 冥队长.atk, 冥队长.def, 冥队长.hp))//冥队长
		{
			a = 冥队长.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &f[65]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 冥队长.atk);//攻击
				_stprintf_s(S3, _T("%d"), 冥队长.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 冥队长.def;
				if (player.def >= 冥队长.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 冥队长.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 冥队长.exp;
						player.money += 冥队长.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(200);
			}
			EndBatchDraw();
		}
		else return 0;

		//魔龙
	case 63:
	case 67:
		if (Battle_state(player.ack, player.def, player.hp, 魔龙.atk, 魔龙.def, 魔龙.hp))//魔龙
		{
			a = 魔龙.hp;
			BeginBatchDraw();
			while (1)
			{
				putimage(0, 0, &h[0]);
				putimage(30, 50, &h[1]);
				setbkmode(TRANSPARENT);
				_stprintf_s(S1, _T("%d"), a);//生命
				_stprintf_s(S2, _T("%d"), 魔龙.atk);//攻击
				_stprintf_s(S3, _T("%d"), 魔龙.def);//防御
				_stprintf_s(S4, _T("%d"), player.hp);//生命
				_stprintf_s(S5, _T("%d"), player.ack);//攻击
				_stprintf_s(S6, _T("%d"), player.def);//防御
				outtextxy(90, 25+20, S1);
				outtextxy(90, 70+20, S2);
				outtextxy(90, 120+20, S3);
				outtextxy(265, 25+20, S4);
				outtextxy(265, 70+20, S5);
				outtextxy(265, 120+20, S6);
				settextcolor(WHITE);
				a -= player.ack - 魔龙.def;
				if (player.def >= 魔龙.atk)
				{
					player.hp -= 10;
				}
				else player.hp -= 魔龙.atk - player.def;
				if (a <= 0)
				{
					{
						player.current_Experience += 魔龙.exp;
						player.money += 魔龙.gold;
						return 1;
					}
				}
				FlushBatchDraw();
				Sleep(300);
			}
			EndBatchDraw();
		}
		else return 0;
		
	}
}

//圣光辉
void glory()
{
	int x=0,y=0;//y输出文字的位置x怪物数量
	int i,j,z;
	int a[10] = { 0 };//好似没用到
	int Dtmap2[29] = { 6,7,9,15,18,19,20,21,34,35,36,37,40,41,42,43,44,47,48,49,51,52,53,54,56,57,58,63,66};//此层可能遇到的怪物
	int Dtmap3[29] = {0};//此层遇到的怪物
	int tap;//好似没用到
	TCHAR S1[10], S2[10], S3[10], S4[10], S5[10],S6[10];
	if (glory_State==1)
	{
		BeginBatchDraw();
		while (1)
		{
				setfillcolor(BLACK);
				fillrectangle(0, 0, 416, 416);
			for (z=0;z<29;z++)
			{
				for (i = 0; i < 13; i++)
				{
					for (j = 0; j < 13; j++)
					{
						if (Dtmap1[w][i][j] == Dtmap2[z])
						{
							if (Dtmap3[z]==0)
							{
								x++;//多少怪物
								Dtmap3[z] = Dtmap2[z];
							}
							//Dtmap3[z] = Dtmap2[z];
							
						}
						

					}
				}

			}
			for (z = 0; z < 29; z++)
			{
				switch (Dtmap3[z])
				{
					//小蝙蝠
				case 6:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[4]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("小蝙蝠"));
					_stprintf_s(S2, _T("%d"), 小蝙蝠.hp);
					_stprintf_s(S3, _T("%d"), 小蝙蝠.atk);
					_stprintf_s(S4, _T("%d"), 小蝙蝠.def);
					_stprintf_s(S5, _T("%d"), 小蝙蝠.exp);
					_stprintf_s(S6, _T("%d"), 小蝙蝠.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22+(5*y)) + 32 * y, S2);
					outtextxy(180,5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275,5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;
					//绿头怪
				case 7:
					putimage(0, 5*y + 32 * y, &f[14]);
					putimage(2, 2+y*37, &f[2]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("绿头怪"));
					_stprintf_s(S2, _T("%d"), 绿头怪.hp);
					_stprintf_s(S3, _T("%d"), 绿头怪.atk);
					_stprintf_s(S4, _T("%d"), 绿头怪.def);
					_stprintf_s(S5, _T("%d"), 绿头怪.exp);
					_stprintf_s(S6, _T("%d"), 绿头怪.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180,5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275,5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;
					//初级法师
				case 9:
					putimage(0, 5*y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[11]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("初级法师"));
					_stprintf_s(S2, _T("%d"), 初级法师.hp);
					_stprintf_s(S3, _T("%d"), 初级法师.atk);
					_stprintf_s(S4, _T("%d"), 初级法师.def);
					_stprintf_s(S5, _T("%d"), 初级法师.exp);
					_stprintf_s(S6, _T("%d"), 初级法师.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180,5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275,5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;
					//红头怪
				case 15:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[1]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("红头怪"));
					_stprintf_s(S2, _T("%d"), 红头怪.hp);
					_stprintf_s(S3, _T("%d"), 红头怪.atk);
					_stprintf_s(S4, _T("%d"), 红头怪.def);
					_stprintf_s(S5, _T("%d"), 红头怪.exp);
					_stprintf_s(S6, _T("%d"), 红头怪.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180,5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275,5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//金队长
				case 18:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[24]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("金队长"));
					_stprintf_s(S2, _T("%d"), 金队长.hp);
					_stprintf_s(S3, _T("%d"), 金队长.atk);
					_stprintf_s(S4, _T("%d"), 金队长.def);
					_stprintf_s(S5, _T("%d"), 金队长.exp);
					_stprintf_s(S6, _T("%d"), 金队长.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//金卫士
				case 19:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[25]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("金卫士"));
					_stprintf_s(S2, _T("%d"), 金卫士.hp);
					_stprintf_s(S3, _T("%d"), 金卫士.atk);
					_stprintf_s(S4, _T("%d"), 金卫士.def);
					_stprintf_s(S5, _T("%d"), 金卫士.exp);
					_stprintf_s(S6, _T("%d"), 金卫士.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//骷髅人
				case 20:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[8]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("骷髅人"));
					_stprintf_s(S2, _T("%d"), 骷髅人.hp);
					_stprintf_s(S3, _T("%d"), 骷髅人.atk);
					_stprintf_s(S4, _T("%d"), 骷髅人.def);
					_stprintf_s(S5, _T("%d"), 骷髅人.exp);
					_stprintf_s(S6, _T("%d"), 骷髅人.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;
					//骷髅士兵
				case 21:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[9]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("骷髅士兵"));
					_stprintf_s(S2, _T("%d"), 骷髅士兵.hp);
					_stprintf_s(S3, _T("%d"), 骷髅士兵.atk);
					_stprintf_s(S4, _T("%d"), 骷髅士兵.def);
					_stprintf_s(S5, _T("%d"), 骷髅士兵.exp);
					_stprintf_s(S6, _T("%d"), 骷髅士兵.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//红蝙蝠
				case 34:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[35]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("红蝙蝠"));
					_stprintf_s(S2, _T("%d"), 红蝙蝠.hp);
					_stprintf_s(S3, _T("%d"), 红蝙蝠.atk);
					_stprintf_s(S4, _T("%d"), 红蝙蝠.def);
					_stprintf_s(S5, _T("%d"), 红蝙蝠.exp);
					_stprintf_s(S6, _T("%d"), 红蝙蝠.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//初级卫兵
				case 35:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[36]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("初级卫兵"));
					_stprintf_s(S2, _T("%d"), 初级卫兵.hp);
					_stprintf_s(S3, _T("%d"), 初级卫兵.atk);
					_stprintf_s(S4, _T("%d"), 初级卫兵.def);
					_stprintf_s(S5, _T("%d"), 初级卫兵.exp);
					_stprintf_s(S6, _T("%d"), 初级卫兵.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//青头怪
				case 36:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[37]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("青头怪"));
					_stprintf_s(S2, _T("%d"), 青头怪.hp);
					_stprintf_s(S3, _T("%d"), 青头怪.atk);
					_stprintf_s(S4, _T("%d"), 青头怪.def);
					_stprintf_s(S5, _T("%d"), 青头怪.exp);
					_stprintf_s(S6, _T("%d"), 青头怪.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//大蝙蝠
				case 37:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[34]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("大蝙蝠"));
					_stprintf_s(S2, _T("%d"), 大蝙蝠.hp);
					_stprintf_s(S3, _T("%d"), 大蝙蝠.atk);
					_stprintf_s(S4, _T("%d"), 大蝙蝠.def);
					_stprintf_s(S5, _T("%d"), 大蝙蝠.exp);
					_stprintf_s(S6, _T("%d"), 大蝙蝠.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//兽面人
				case 40:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[39]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("兽面人"));
					_stprintf_s(S2, _T("%d"), 兽面人.hp);
					_stprintf_s(S3, _T("%d"), 兽面人.atk);
					_stprintf_s(S4, _T("%d"), 兽面人.def);
					_stprintf_s(S5, _T("%d"), 兽面人.exp);
					_stprintf_s(S6, _T("%d"), 兽面人.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//高级法师
				case 41:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[40]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("高级法师"));
					_stprintf_s(S2, _T("%d"), 高级法师.hp);
					_stprintf_s(S3, _T("%d"), 高级法师.atk);
					_stprintf_s(S4, _T("%d"), 高级法师.def);
					_stprintf_s(S5, _T("%d"), 高级法师.exp);
					_stprintf_s(S6, _T("%d"), 高级法师.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//红衣法师
				case 42:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[41]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("红衣法师"));
					_stprintf_s(S2, _T("%d"), 红衣法师.hp);
					_stprintf_s(S3, _T("%d"), 红衣法师.atk);
					_stprintf_s(S4, _T("%d"), 红衣法师.def);
					_stprintf_s(S5, _T("%d"), 红衣法师.exp);
					_stprintf_s(S6, _T("%d"), 红衣法师.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//骷髅队长
				case 43:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[42]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("骷髅队长"));
					_stprintf_s(S2, _T("%d"), 骷髅队长.hp);
					_stprintf_s(S3, _T("%d"), 骷髅队长.atk);
					_stprintf_s(S4, _T("%d"), 骷髅队长.def);
					_stprintf_s(S5, _T("%d"), 骷髅队长.exp);
					_stprintf_s(S6, _T("%d"), 骷髅队长.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//怪王
				case 44:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[43]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("怪王"));
					_stprintf_s(S2, _T("%d"), 怪王.hp);
					_stprintf_s(S3, _T("%d"), 怪王.atk);
					_stprintf_s(S4, _T("%d"), 怪王.def);
					_stprintf_s(S5, _T("%d"), 怪王.exp);
					_stprintf_s(S6, _T("%d"), 怪王.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//白衣武士
				case 47:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[46]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("白衣武士"));
					_stprintf_s(S2, _T("%d"), 白衣武士.hp);
					_stprintf_s(S3, _T("%d"), 白衣武士.atk);
					_stprintf_s(S4, _T("%d"), 白衣武士.def);
					_stprintf_s(S5, _T("%d"), 白衣武士.exp);
					_stprintf_s(S6, _T("%d"), 白衣武士.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//麻衣法师
				case 48:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[47]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("麻衣法师"));
					_stprintf_s(S2, _T("%d"), 麻衣法师.hp);
					_stprintf_s(S3, _T("%d"), 麻衣法师.atk);
					_stprintf_s(S4, _T("%d"), 麻衣法师.def);
					_stprintf_s(S5, _T("%d"), 麻衣法师.exp);
					_stprintf_s(S6, _T("%d"), 麻衣法师.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//兽面武士
				case 49:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[48]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("兽面武士"));
					_stprintf_s(S2, _T("%d"), 兽面武士.hp);
					_stprintf_s(S3, _T("%d"), 兽面武士.atk);
					_stprintf_s(S4, _T("%d"), 兽面武士.def);
					_stprintf_s(S5, _T("%d"), 兽面武士.exp);
					_stprintf_s(S6, _T("%d"), 兽面武士.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//石头怪人
				case 51:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[50]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("石头怪人"));
					_stprintf_s(S2, _T("%d"), 石头怪人.hp);
					_stprintf_s(S3, _T("%d"), 石头怪人.atk);
					_stprintf_s(S4, _T("%d"), 石头怪人.def);
					_stprintf_s(S5, _T("%d"), 石头怪人.exp);
					_stprintf_s(S6, _T("%d"), 石头怪人.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//高级卫兵
				case 52:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[51]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("高级卫兵"));
					_stprintf_s(S2, _T("%d"), 高级卫兵.hp);
					_stprintf_s(S3, _T("%d"), 高级卫兵.atk);
					_stprintf_s(S4, _T("%d"), 高级卫兵.def);
					_stprintf_s(S5, _T("%d"), 高级卫兵.exp);
					_stprintf_s(S6, _T("%d"), 高级卫兵.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//冥卫兵
				case 53:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[52]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("冥卫兵"));
					_stprintf_s(S2, _T("%d"), 冥卫兵.hp);
					_stprintf_s(S3, _T("%d"), 冥卫兵.atk);
					_stprintf_s(S4, _T("%d"), 冥卫兵.def);
					_stprintf_s(S5, _T("%d"), 冥卫兵.exp);
					_stprintf_s(S6, _T("%d"), 冥卫兵.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//双手剑士
				case 54:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[53]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("双手剑士"));
					_stprintf_s(S2, _T("%d"), 双手剑士.hp);
					_stprintf_s(S3, _T("%d"), 双手剑士.atk);
					_stprintf_s(S4, _T("%d"), 双手剑士.def);
					_stprintf_s(S5, _T("%d"), 双手剑士.exp);
					_stprintf_s(S6, _T("%d"), 双手剑士.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//冥战士
				case 56:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[55]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("冥战士"));
					_stprintf_s(S2, _T("%d"), 冥战士.hp);
					_stprintf_s(S3, _T("%d"), 冥战士.atk);
					_stprintf_s(S4, _T("%d"), 冥战士.def);
					_stprintf_s(S5, _T("%d"), 冥战士.exp);
					_stprintf_s(S6, _T("%d"), 冥战士.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//灵武士
				case 57:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[56]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("灵武士"));
					_stprintf_s(S2, _T("%d"), 灵武士.hp);
					_stprintf_s(S3, _T("%d"), 灵武士.atk);
					_stprintf_s(S4, _T("%d"), 灵武士.def);
					_stprintf_s(S5, _T("%d"), 灵武士.exp);
					_stprintf_s(S6, _T("%d"), 灵武士.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//灵法师
				case 58:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[56]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("灵法师"));
					_stprintf_s(S2, _T("%d"), 灵法师.hp);
					_stprintf_s(S3, _T("%d"), 灵法师.atk);
					_stprintf_s(S4, _T("%d"), 灵法师.def);
					_stprintf_s(S5, _T("%d"), 灵法师.exp);
					_stprintf_s(S6, _T("%d"), 灵法师.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//魔龙
				case 63:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &h[1]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("魔龙"));
					_stprintf_s(S2, _T("%d"), 魔龙.hp);
					_stprintf_s(S3, _T("%d"), 魔龙.atk);
					_stprintf_s(S4, _T("%d"), 魔龙.def);
					_stprintf_s(S5, _T("%d"), 魔龙.exp);
					_stprintf_s(S6, _T("%d"), 魔龙.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

					//冥队长
				case 66:
					putimage(0, 5 * y + 32 * y, &f[14]);
					putimage(2, 2 + y * 37, &f[65]);
					setbkmode(TRANSPARENT);
					settextcolor(WHITE);
					_stprintf_s(S1, _T("冥队长"));
					_stprintf_s(S2, _T("%d"), 冥队长.hp);
					_stprintf_s(S3, _T("%d"), 冥队长.atk);
					_stprintf_s(S4, _T("%d"), 冥队长.def);
					_stprintf_s(S5, _T("%d"), 冥队长.exp);
					_stprintf_s(S6, _T("%d"), 冥队长.gold);
					settextstyle(12, 8, _T("黑体"));
					outtextxy(75, 5 * (y + 1) + 32 * y, S1);
					outtextxy(75, (22 + (5 * y)) + 32 * y, S2);
					outtextxy(180, 5 * (y + 1) + 32 * y, S3);
					outtextxy(180, (22 + (5 * y)) + 32 * y, S4);
					outtextxy(275, 5 * (y + 1) + 32 * y, S5);
					outtextxy(275, (22 + (5 * y)) + 32 * y, S6);
					y++;
					break;

				default:
					break;
				}
				if (y >= x)
				{
					y = 0;
				}
			}
				FlushBatchDraw();
				Sleep(120);
				if (GetAsyncKeyState('L') & 0x8000)
				{
					break;
				}
		}
			 EndBatchDraw();
			
	}
}

//风之罗盘
void up()//上
{
	if (up_state==1&&w+1<=16)
	{
		if (up2_state==1)
		{
			if (w1>=w)
			{
				Dtmap1[w][y][x] = 0;
				Dtmap1[w][playe_address[w][3]][playe_address[w][2]] = 4;
				w++;
				Playe1_address();
			}
		}
		else
		{
			Dtmap1[w][y][x] = 0;
			Dtmap1[w][playe_address[w][3]][playe_address[w][2]] = 4;
			w++;
			Playe1_address();
		}
		
	}
}
void up1()//下
{
	if (up1_state == 1&&w-1>=0)
	{
		Dtmap1[w][y][x] = 0;
		Dtmap1[w][playe_address[w][1]][playe_address[w][0]] = 4;
		w--;
		Playe2_address();
	}
}

//商店
void shop()
{
	void display_info();
	
	BeginBatchDraw();
	while (1)
	{
		if (w==3)
		{
			putimage(80, 80, &f[66 + shop_state]);
		}
		else if (w == 11)
		{
			putimage(80, 80, &f[70 + shop_state]);
		}

		if (GetAsyncKeyState(VK_UP) & 0x8000)
		{
			shop_state--;
			if (shop_state < 1)
			{
				shop_state = 4;
			}
		}
		if (GetAsyncKeyState(VK_DOWN) & 0x8000)
		{
			shop_state++;
			if (shop_state > 4)
			{
				shop_state = 1;
			}
		}
		if (GetAsyncKeyState(VK_SPACE) & 0x8000)
		{
			if (w==3)
			{
				if (shop_state == 1 && player.money >= 25)
				{
					player.money -= 25;
					player.hp += 500;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();

				}
				if (shop_state == 2 && player.money >= 25)
				{
					player.money -= 25;
					player.ack += 4;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (shop_state == 3 && player.money >= 25)
				{
					player.money -= 25;
					player.def += 4;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (shop_state == 4)
				{
					shop_state = 1;
					break;
				}
			}
			else if (w==11)
			{
				if (shop_state == 1 && player.money >= 100)
				{
					player.money -= 100;
					player.hp += 4000;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (shop_state == 2 && player.money >= 100)
				{
					player.money -= 100;
					player.ack += 20;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (shop_state == 3 && player.money >= 100)
				{
					player.money -= 100;
					player.def += 20;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (shop_state == 4)
				{
					shop_state = 1;
					break;
				}
			}

		}
		FlushBatchDraw();
		Sleep(100);
	}
	EndBatchDraw();
}

//老者
void old_man()
{
	void display_info();

	BeginBatchDraw();
	while (1)
	{
		if (w == 5||w==2)
		{
			putimage(80, 80, &f[75 + old_man_state]);
		}
		else if (w == 13)
		{
			putimage(80, 80, &f[79 + old_man_state]);
		}

		if (GetAsyncKeyState(VK_UP) & 0x8000)
		{
			old_man_state--;
			if (old_man_state < 1)
			{
				old_man_state = 4;
			}
		}
		if (GetAsyncKeyState(VK_DOWN) & 0x8000)
		{
			old_man_state++;
			if (old_man_state > 4)
			{
				old_man_state = 1;
			}
		}
		if (GetAsyncKeyState(VK_SPACE) & 0x8000)
		{
			if (w == 5||w==2)
			{
				if (old_man_state == 1 && player.current_Experience >= 100)
				{
					player.current_Experience -= 100;
					player.grade++;
					player.hp += 500;
					player.ack += 3;
					player.def += 3;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();

				}
				if (old_man_state == 2 && player.current_Experience >= 30)
				{
					player.current_Experience -= 30;
					player.ack += 5;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (old_man_state == 3 && player.current_Experience >= 30)
				{
					player.current_Experience -= 30;
					player.def += 5;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (old_man_state == 4)
				{
					old_man_state = 1;
					break;
				}
			}
			else if (w == 13)
			{
				if (old_man_state == 1 && player.current_Experience >= 270)
				{
					player.current_Experience -= 270;
					player.grade+=3;
					player.hp += 2000;
					player.ack += 10;
					player.def += 10;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (old_man_state == 2 && player.current_Experience >= 95)
				{
					player.current_Experience -= 95;
					player.ack += 17;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (old_man_state == 3 && player.current_Experience >= 95)
				{
					player.current_Experience -= 95;
					player.def += 17;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (old_man_state == 4)
				{
					old_man_state = 1;
					break;
				}
			}

		}
		FlushBatchDraw();
		Sleep(100);
	}
	EndBatchDraw();
}

//商人
void trader()
{
	void display_info();

	BeginBatchDraw();
	while (1)
	{
		if (w == 5 || w == 2)
		{
			putimage(80, 80, &f[83 + trader_state]);
		}
		else if (w == 12)
		{
			putimage(80, 80, &f[87 + trader_state]);
		}

		if (GetAsyncKeyState(VK_UP) & 0x8000)
		{
			trader_state--;
			if (trader_state < 1)
			{
				trader_state = 4;
			}
		}
		if (GetAsyncKeyState(VK_DOWN) & 0x8000)
		{
			trader_state++;
			if (trader_state > 4)
			{
				trader_state = 1;
			}
		}
		if (GetAsyncKeyState(VK_SPACE) & 0x8000)
		{
			if (w == 5 || w == 2)
			{
				if (trader_state == 1 && player.money >= 10)
				{
					player.money -= 10;
					player.yellow_Key++;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();

				}
				if (trader_state == 2 && player.money >= 50)
				{
					player.money -= 50;
					player.blue_Key++;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (trader_state == 3 && player.money>= 100)
				{
					player.money -= 100;
					player.red_Key++;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (trader_state == 4)
				{
					trader_state = 1;
					break;
				}
			}
			else if (w == 12)
			{
				if (trader_state == 1 && player.money>= 7)
				{
					player.money -= 7;
					player.yellow_Key++;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (trader_state == 2 && player.money >= 35)
				{
					player.money -= 35;
					player.blue_Key++;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (trader_state == 3 && player.money >= 70)
				{
					player.money -= 70;
					player.red_Key++;
					setcolor(BLACK);
					fillrectangle(416, 0, 466, 416);
					putimage(416, 0, &f[12]);
					display_info();
				}
				if (trader_state == 4)
				{
					trader_state = 1;
					break;
				}
			}

		}
		FlushBatchDraw();
		Sleep(100);
	}
	EndBatchDraw();
}

//重启
void reset()
{
	ditushuzu();
	cross_state = 0;
	w = 0;
	x = 6;
	y = 11;
	player = player_1;
	plot_state1[0] = 0;
	plot_state1[1] = 0;
	plot_state1[2] = 0;
	glory_State = -1;
	glory1_State = 0;
	up_state = -1;
	up2_state == 0;
	v = 3;
}

//游戏控制
void ctrlGame() 
{
	int num;//怪物判断
	if (GetAsyncKeyState(VK_UP) & 0x8000)//上
	{
		if (i - 1 > 0)
		{
			switch (Dtmap1[w][y-1][x])
			{
				//上楼
			case 2:
				Dtmap1[w][y][x] = 0;
				Dtmap1[w][playe_address[w][3]][playe_address[w][2]] = 4;
				w++;
				if (w>w1)
				{
					w1++;
				}
				Playe1_address();
				break;

				//下楼
			case 12:
				Dtmap1[w][y][x] = 0;
				Dtmap1[w][playe_address[w][1]][playe_address[w][0]] = 4;
				w--;
				Playe2_address();
				break;
				//铁剑
			case 38:
				player.ack += 10;
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//战斗触发
			case 6:
			case 7:
			case 9:
			case 15:
			case 18:
			case 19:
			case 20:
			case 21:
			case 34:
			case 35:
			case 36:
			case 37:
			case 40:
			case 41:
			case 42:
			case 43:
			case 44:
			case 47:
			case 48:
			case 49:
			case 51:
			case 52:
			case 53:
			case 54:
			case 56:
			case 57:
			case 58:
			case 66:
				num = Battle(Dtmap1[w][y - 1][x]);
				if (num)
				{
					Dtmap1[w][y - 1][x] = 0;
				}
				
				break;
				//开黄门
			case 8:
				if (player.yellow_Key!=0)
				{
					player.yellow_Key--;
					Dtmap1[w][y - 1][x] = 4;
					Dtmap1[w][y][x] = 0;
					y--;
					z++;
					v = 3;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;
				//捡蓝水晶
			case 30:
				player.def += 5;
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡红水晶
			case 32:
				player.ack += 5;
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡黄钥匙
			case 11:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.yellow_Key++;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡红药水
			case 3:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.hp += 300;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡蓝药水
			case 24:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.hp += 600;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//玩家移动
			case 0:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//圣光辉
			case 23:
				glory1_State = 1;
				BeginBatchDraw();
				while (1)
				{
					putimage(100, 250, &f[13]);
					FlushBatchDraw();
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				glory_State = 1;
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//红钥匙
			case 14:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.red_Key++;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//蓝钥匙
			case 16:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.blue_Key++;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//牢门
			case 17:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//老者
			case 22:
				old_man();
				break;

				//商人
			case 25:
				trader();
				break;

				//蓝门
			case 26:
				if (player.blue_Key!=0)
				{
					Dtmap1[w][y - 1][x] = 4;
					Dtmap1[w][y][x] = 0;
					player.blue_Key--;
					y--;
					z++;
					v = 3;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;

				//红门
			case 28:
				if (player.red_Key!=0)
				{
					Dtmap1[w][y - 1][x] = 4;
					Dtmap1[w][y][x] = 0;
					player.red_Key--;
					y--;
					z++;
					v = 3;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;

				//商店
			case 31:
			case 33:
			case 29:
				shop();
				
				break;

				//小偷
			case 39:
				BeginBatchDraw();
				while (1)
				{
					putimage(100, 250, &f[75]);
					FlushBatchDraw();
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				Dtmap1[2][7][2] = 0;
				break;

				//金块
			case 45:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.money+=25;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//幸运十字架
			case 46:
				if (plot_state1[3]==0)
				{
					plot_state1[3] = plot(46);
					if (plot_state1[2] == 1)
					{
						plot_state = 0;

					}
				}
				cross_state = 1;
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//风之罗盘
			case 50:
				BeginBatchDraw();
				while (1)
				{
					putimage(80, 80, &f[66]);
					FlushBatchDraw();
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				up_state = 1;
				up1_state = 1;
				up2_state = 1;
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.blue_Key++;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//骑士盾
			case 55:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.def+=20;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

			//	//镐子
			//case 59:

			//	break;

				//飞羽
			case 60:
				player.def += 10;
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//双倍药水
			case 61:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.def *= 2;
				player.ack *= 2;
				player.hp *= 2;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//钥匙盒
			case 62:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.yellow_Key++;
				player.red_Key++;
				player.blue_Key++;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//公主
			case 64:
				if (plot_state1[2] == 0)
				{
					plot_state1[2] = plot(64);
					if (plot_state1[1] == 1)
					{
						plot_state = 0;

					}
				}
				BeginBatchDraw();
				putimage(0, 0, &h[2]);
				FlushBatchDraw();
				Sleep(2000);
				reset();
				state = STATE_MENU;

				break;

				//铁盾
			case 65:
				Dtmap1[w][y - 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.def += 35;
				y--;
				z++;
				v = 3;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//魔龙
			case 63:
			case 67:

				if (plot_state1[1]==0)
				{
					plot_state1[1] = plot(67);
					if (plot_state1[1] == 1)
					{
						plot_state = 0;

					}
				}
				else if (plot_state1[1]==1)
				{
					plot_state = 3;
					plot(67);
					plot_state = 0;
				}
				num = Battle(Dtmap1[w][y - 1][x]);
				if (num)
				{
					Dtmap1[w][y - 1][x] = 0;
					Dtmap1[w][y - 1][x-1] = 0;
					Dtmap1[w][y - 1][x+1] = 0;
					Dtmap1[w][y - 2][x] = 0;
					Dtmap1[w][y - 2][x-1] = 0;
					Dtmap1[w][y - 2][x+1] = 0;
					Dtmap1[w][y - 3][x] = 0;
					Dtmap1[w][y - 3][x-1] = 0;
					Dtmap1[w][y - 3][x+1] = 0;
				}
				break;

				//仙子
			case 68:
			
				while (1)
				{
					plot_state1[0]=plot(68);
					if (plot_state1[0]==1)
					{
						plot_state = 0;
						break;
					}
					
					
				}
				/*if (plot_state1[0]==1)
				{
					plot_state = 14;
					plot(68);
					plot_state = 0;
				}*/
				player.yellow_Key += 2;
				player.red_Key += 1;
				player.blue_Key += 1;
				Dtmap1[w][y - 1][x] = 0;
				Dtmap1[w][y - 1][x - 1] = 68;
				break;

			default:
				break;
			
			}

		}
	}
	if (GetAsyncKeyState(VK_DOWN) & 0x8000)//下
	{
		if (y + 1 < 13)
		{
			switch (Dtmap1[w][y + 1][x])
			{
				//上楼
			case 2:
				Dtmap1[w][y][x] = 0;
				Dtmap1[w][playe_address[w][3]][playe_address[w][2]] = 4;
				w++;
				if (w > w1)
				{
					w1++;
				}
				Playe1_address();
				break;

				//下楼
			case 12:
				Dtmap1[w][y][x] = 0;
				Dtmap1[w][playe_address[w][1]][playe_address[w][0]] = 4;
				w--;
				Playe2_address();
				break;

				//铁剑
			case 38:
				player.ack += 10;
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//战斗触发
			case 6:
			case 7:
			case 9:
			case 15:
			case 18:
			case 19:
			case 20:
			case 21:
			case 34:
			case 35:
			case 36:
			case 37:
			case 40:
			case 41:
			case 42:
			case 43:
			case 44:
			case 47:
			case 48:
			case 49:
			case 51:
			case 52:
			case 53:
			case 54:
			case 56:
			case 57:
			case 58:
			case 66:
				num = Battle(Dtmap1[w][y + 1][x]);
				if (num)
				{
					Dtmap1[w][y + 1][x] = 0;
				}				
				break;
				//开黄门
			case 8:
				if (player.yellow_Key!=0)
				{
					Dtmap1[w][y + 1][x] = 4;
					Dtmap1[w][y][x] = 0;
					player.yellow_Key--;
					y++;
					z++;
					v = 0;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;
				//捡蓝水晶
			case 30:
				player.def += 5;
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡红水晶
			case 32:
				player.ack += 5;
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡黄钥匙
			case 11:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.yellow_Key++;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡红药水
			case 3:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.hp += 300;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡蓝药水
			case 24:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.hp += 600;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//玩家移动
			case 0:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//圣光辉
			case 23:
				glory1_State = 1;
				BeginBatchDraw();
				while (1)
				{
					putimage(100, 250, &f[13]);
					FlushBatchDraw();
					Sleep(100);
					if (GetAsyncKeyState(VK_SPACE)&0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				putimage(100, 250, &f[13]);
				glory_State = 1;
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//红钥匙
			case 14:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.red_Key++;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//蓝钥匙
			case 16:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.blue_Key++;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//牢门
			case 17:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//老者
			case 22:
				old_man();
				break;

				//商人
			case 25:
				trader();
				break;

				//蓝门
			case 26:
				if (player.blue_Key!=0)
				{
					Dtmap1[w][y + 1][x] = 4;
					Dtmap1[w][y][x] = 0;
					player.blue_Key--;
					y++;
					z++;
					v = 0;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;

				//红门
			case 28:
				if (player.red_Key!=0)
				{
					Dtmap1[w][y + 1][x] = 4;
					Dtmap1[w][y][x] = 0;
					player.red_Key--;
					y++;
					z++;
					v = 0;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;

				//商店
			case 31:
			case 33:
			case 29:
				shop();
				break;

				//小偷
			case 39:
				BeginBatchDraw();
				while (1)
				{
					putimage(100, 250, &f[75]);
					FlushBatchDraw();
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				Dtmap1[2][7][2] = 0;
				break;

				//金块
			case 45:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.money += 25;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//幸运十字架
			case 46:
				if (plot_state1[2] == 0)
				{
					plot_state1[2] = plot(46);
					if (plot_state1[2] == 1)
					{
						plot_state = 0;

					}
				}
				cross_state = 1;
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//风之罗盘
			case 50:
				BeginBatchDraw();
				while (1)
				{
					putimage(80, 80, &f[66]);
					FlushBatchDraw();
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				up_state = 1;
				up1_state = 1;
				up2_state = 1;
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//骑士盾
			case 55:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.def += 20;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

			//	//镐子
			//case 59:

			//	break;

				//飞羽
			case 60:
				player.def += 10;
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//双倍药水
			case 61:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.def *= 2;
				player.ack *= 2;
				player.hp *= 2;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//钥匙盒
			case 62:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.yellow_Key++;
				player.red_Key++;
				player.blue_Key++;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//铁盾
			case 65:
				Dtmap1[w][y + 1][x] = 4;
				Dtmap1[w][y][x] = 0;
				player.def += 35;
				y++;
				z++;
				v = 0;
				if (z == 2)
				{
					z = 0;
				}
				break;
				/*魔龙
			case 63:
			case 67:
				
				break;*/

			default:
				break;
			}
			

		}
	}
	if (GetAsyncKeyState(VK_LEFT) & 0x8000)//左
	{
		if (x - 1 >= 0)
		{
			switch (Dtmap1[w][y][x - 1])
			{
				//上楼
			case 2:
				Dtmap1[w][y][x] = 0;
				Dtmap1[w][playe_address[w][3]][playe_address[w][2]] = 4;
				w++;
				if (w > w1)
				{
					w1++;
				}
				Playe1_address();
				break;

				//下楼
			case 12:
				Dtmap1[w][y][x] = 0;
				Dtmap1[w][playe_address[w][1]][playe_address[w][0]] = 4;
				w--;
				Playe2_address();
				break;

				//铁剑
			case 38:
				player.ack += 10;
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//战斗触发
			case 6:
			case 7:
			case 9:
			case 15:
			case 18:
			case 19:
			case 20:
			case 21:
			case 34:
			case 35:
			case 36:
			case 37:
			case 40:
			case 41:
			case 42:
			case 43:
			case 44:
			case 47:
			case 48:
			case 49:
			case 51:
			case 52:
			case 53:
			case 54:
			case 56:
			case 57:
			case 58:
			case 63:
			case 66:
				num = Battle(Dtmap1[w][y][x - 1]);
				if (num)
				{
					
					Dtmap1[w][y][x - 1] = 0;
				}
				break;
				//开黄门
			case 8:
				if (player.yellow_Key!=0)
				{
					Dtmap1[w][y][x - 1] = 4;
					Dtmap1[w][y][x] = 0;
					player.yellow_Key--;
					x--;
					z++;
					v = 1;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;
				//捡蓝水晶
			case 30:
				player.def += 5;
				Dtmap1[w][y][x - 1] = 4;
				Dtmap1[w][y][x] = 0;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡红水晶
			case 32:
				player.ack += 5;
				Dtmap1[w][y][x - 1] = 4;
				Dtmap1[w][y][x] = 0;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡黄钥匙
			case 11:
				Dtmap1[w][y][x - 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.yellow_Key++;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡红药水
			case 3:
				Dtmap1[w][y][x - 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.hp += 300;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡蓝药水
			case 24:
				Dtmap1[w][y][x - 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.hp += 600;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//玩家移动
			case 0:
				Dtmap1[w][y][x - 1] = 4;
				Dtmap1[w][y][x] = 0;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//圣光辉
			case 23:
				glory1_State = 1;
				BeginBatchDraw();
				while (1)
				{
					putimage(100, 250, &f[13]);
					FlushBatchDraw();
					Sleep(100);
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				putimage(100, 250, &f[13]);
				glory_State = 1;
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//红钥匙
			case 14:
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				player.red_Key++;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//蓝钥匙
			case 16:
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				player.blue_Key++;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//牢门
			case 17:
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//老者
			case 22:
				old_man();
				break;

				//商人
			case 25:
				trader();
				break;

				//蓝门
			case 26:
				if (player.blue_Key!=0)
				{
					Dtmap1[w][y][x - 1] = 4;
					Dtmap1[w][y][x] = 0;
					player.blue_Key--;
					x--;
					z++;
					v = 1;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;

				//红门
			case 28:
				if (player.red_Key!=0)
				{
					Dtmap1[w][y][x - 1] = 4;
					Dtmap1[w][y][x] = 0;
					player.red_Key--;
					x--;
					z++;
					v = 1;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;

				//商店
			case 31:
			case 33:
			case 29:
				shop();
				break;

				//小偷
			case 39:
				BeginBatchDraw();
				while (1)
				{
					putimage(100, 250, &f[75]);
					FlushBatchDraw();
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				Dtmap1[2][7][2] = 0;
				break;

				//金块
			case 45:
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				player.money += 25;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//幸运十字架
			case 46:
				if (plot_state1[2] == 0)
				{
					plot_state1[2] = plot(46);
					if (plot_state1[2] == 1)
					{
						plot_state = 0;

					}
				}
				cross_state = 1;
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//风之罗盘
			case 50:
				BeginBatchDraw();
				while (1)
				{
					putimage(80, 80, &f[66]);
					FlushBatchDraw();
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				up_state = 1;
				up1_state = 1;
				up2_state = 1;
				Dtmap1[w][y][x - 1] = 4;
				Dtmap1[w][y][x] = 0;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//骑士盾
			case 55:
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				player.def += 20;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

			//	//镐子
			//case 59:

			//	break;

				//飞羽
			case 60:
				player.def += 10;
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//双倍药水
			case 61:
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				player.def *= 2;
				player.ack *= 2;
				player.hp *= 2;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//钥匙盒
			case 62:
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				player.yellow_Key++;
				player.red_Key++;
				player.blue_Key++;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//铁盾
			case 65:
				Dtmap1[w][y][x-1] = 4;
				Dtmap1[w][y][x] = 0;
				player.def += 35;
				x--;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//小花仙
			case 68:
				if (plot_state1[0] == 0)//对话状态
				{
					while (1)
					{
						plot_state1[0] = plot(68);
						if (plot_state1[0] == 1)//对话状态
						{
							plot_state = 0;//对话位置
							break;
						}


					}
				}
				if (cross_state==1)//拿到十字架
				{
					plot(69);
					plot_state = 0;//对话位置
					player.ack += 100;
					player.def += 100;
					player.hp += 5000;
				}
				else if (plot_state1[0] == 1)//没拿到十字架再次对话
				{
					plot_state = 15;//对话位置
					plot(68);
					plot_state = 0;//对话位置
				}
				

			
				break;

			default:
				break;
			}

		}
	}
	if (GetAsyncKeyState(VK_RIGHT) & 0x8000)//右
	{
		if (x + 1 < 13)
		{
			switch (Dtmap1[w][y][x + 1])
			{
				//上楼
			case 2:
				Dtmap1[w][y][x] = 0;
				Dtmap1[w][playe_address[w][3]][playe_address[w][2]] = 4;
				w++;
				if (w > w1)
				{
					w1++;
				}
				Playe1_address();
				break;

				//下楼
			case 12:
				Dtmap1[w][y][x] = 0;
				Dtmap1[w][playe_address[w][1]][playe_address[w][0]] = 4;
				w--;
				Playe2_address();
				break;

				//铁剑
			case 38:
				player.ack += 10;
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//对战触发
			case 6:
			case 7:
			case 9:
			case 15:
			case 18:
			case 19:
			case 20:
			case 21:
			case 34:
			case 35:
			case 36:
			case 37:
			case 40:
			case 41:
			case 42:
			case 43:
			case 44:
			case 47:
			case 48:
			case 49:
			case 51:
			case 52:
			case 53:
			case 54:
			case 56:
			case 57:
			case 58:
			case 63:
			case 66:
				num = Battle(Dtmap1[w][y][x + 1]);
				if (num)
				{
					Dtmap1[w][y][x + 1] = 0;
				}
				break;
				//开黄门
			case 8:
				if (player.yellow_Key!=0)
				{
					Dtmap1[w][y][x + 1] = 4;
					Dtmap1[w][y][x] = 0;
					player.yellow_Key--;
					x++;
					z++;
					v = 2;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;
				//捡蓝水晶
			case 30:
				player.def += 5;
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				x++;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡红水晶
			case 32:
				player.ack += 5;
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				x++;
				z++;
				v = 1;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡黄钥匙
			case 11:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.yellow_Key++;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡红药水
			case 3:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.hp += 300;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//捡蓝药水
			case 24:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.hp += 600;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//玩家移动
			case 0:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//圣光辉
			case 23:
				glory1_State = 1;
				BeginBatchDraw();
				while (1)
				{
					putimage(100, 250, &f[13]);
					FlushBatchDraw();
					Sleep(100);
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				putimage(100, 250, &f[13]);
				glory_State = 1;
				Dtmap1[w][y][x+1] = 4;
				Dtmap1[w][y][x] = 0;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;
				//红钥匙
			case 14:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.red_Key++;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//蓝钥匙
			case 16:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.blue_Key++;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//牢门
			case 17:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//老者
			case 22:
				old_man();
				break;

				//商人
			case 25:
				trader();
				break;

				//蓝门
			case 26:
				if (player.blue_Key)
				{
					Dtmap1[w][y][x + 1] = 4;
					Dtmap1[w][y][x] = 0;
					player.blue_Key--;
					x++;
					z++;
					v = 2;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;

				//红门
			case 28:
				if (player.red_Key!=0)
				{
					Dtmap1[w][y][x + 1] = 4;
					Dtmap1[w][y][x] = 0;
					player.red_Key--;
					x++;
					z++;
					v = 2;
					if (z == 2)
					{
						z = 0;
					}
				}
				break;

				//商店
			case 31:
			case 33:
			case 29:
				shop();
				break;

				//小偷
			case 39:
				BeginBatchDraw();
				while (1)
				{
					putimage(100, 250, &f[75]);
					FlushBatchDraw();
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				Dtmap1[2][7][2] = 0;
				break;

				//金块
			case 45:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.money += 25;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//幸运十字架
			case 46:
				if (plot_state1[2] == 0)
				{
					plot_state1[2] = plot(46);
					if (plot_state1[2] == 1)
					{
						plot_state = 0;

					}
				}
				cross_state = 1;
				Dtmap1[w][y][x+1] = 4;
				Dtmap1[w][y][x] = 0;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//风之罗盘
			case 50:
				BeginBatchDraw();
				while (1)
				{
					putimage(80, 80, &f[66]);
					FlushBatchDraw();
					if (GetAsyncKeyState(VK_SPACE) & 0x8000)
					{
						break;
					}
				}
				EndBatchDraw();
				up_state = 1;
				up1_state = 1;
				up2_state = 1;
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//骑士盾
			case 55:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.def += 20;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//镐子
			case 59:

				break;

				//飞羽
			case 60:
				player.def += 10;
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//双倍药水
			case 61:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.def *= 2;
				player.ack *= 2;
				player.hp *= 2;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//钥匙盒
			case 62:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.yellow_Key++;
				player.red_Key++;
				player.blue_Key++;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

				//铁盾
			case 65:
				Dtmap1[w][y][x + 1] = 4;
				Dtmap1[w][y][x] = 0;
				player.def += 35;
				x++;
				z++;
				v = 2;
				if (z == 2)
				{
					z = 0;
				}
				break;

			default:
				break;
			}
			

		}

	}

	if (GetAsyncKeyState('L') & 0x8000)
	{
		if (glory_State ==1)
		{
			glory();
		}

	}

	if (GetAsyncKeyState('O') & 0x8000)
	{
		if (up_state==1)
		{
			up();
		}
	}

	if (GetAsyncKeyState('P')&0x8000)
	{
		if (up1_state==1)
		{
			up1();
		}
	}

	if (GetAsyncKeyState('R')&0x8000)
	{
		reset();
	}
	
}

//游戏状态
void game_State()
{

	switch (state)
	{
		//主页面
	case STATE_MENU:
		if (GetAsyncKeyState(VK_UP) & 0x8000)
		{
			menuChoose--;
			if (menuChoose == -1||menuChoose==0 )
			{
				menuChoose = 3;
			}
		}
		if (GetAsyncKeyState(VK_DOWN)&0X8000)
		{
			menuChoose = (menuChoose %3)+1 ;
		}
		if (GetAsyncKeyState(VK_SPACE) & 0x8000)
		{
			if (menuChoose == 1)
			{
				state = STATE_GAME;
			}
			if (menuChoose == 2)
			{
				state = STATE_ABOUT;
			}
			if (menuChoose == 3)
			{
				exit(0);
			}
		}
		break;
		//进入游戏
	case STATE_GAME:
		putImage();
		ctrlGame();
		TCHAR S1[10], S2[10], S3[10];
		setbkmode(TRANSPARENT);
		settextcolor(WHITE);
		//_stprintf_s(S1, _T("%d"), w);//楼层
		//_stprintf_s(S2, _T("（状态：%d）"), Administrators);//开发状态
		settextstyle(0, 5, _T("黑体"));
		//outtextxy(0, 400, _T("提示：按M键进入开发模式:按L查看怪物数据按O/P跳层"));
		//outtextxy(235, 400,S2);//开发状态
		//outtextxy(355, 400, _T("当前楼层："));
		//settextstyle(12, 8, _T("黑体"));
		//outtextxy(470, 295, S1);
		if (GetAsyncKeyState(VK_ESCAPE) & 0x8000)//回到主页面
		{
			state = STATE_MENU;
		}
		if (GetAsyncKeyState('M') & 0x8000)//进入开发模式
		{
			Administrators *= -1;
			if (glory1_State == 0)//拿到圣光辉后为1不可以关闭
			{
				glory_State *= -1;
				
			}
			if (up2_state==0)
			{
				up_state *= -1;
				up1_state *= -1;
			}
			
			
		}
		break;
		//关于游戏
	case STATE_ABOUT:
		putimage(0, 0, &g[4]);
		if (GetAsyncKeyState(VK_ESCAPE)&0x8000)
		{
			state = STATE_MENU;
		}
		break;

	default: break;
	}

}

//玩家数据显示
void display_info()
{
	TCHAR S1[10], S2[10], S3[10], S4[10], S5[10], S6[10],S7[10],S8[10],S9[10],S10[10],S11[10];
	_stprintf_s(S1, _T("%d"), player.grade);//等级
	_stprintf_s(S2, _T("%d"), player.hp);//生命
	_stprintf_s(S3, _T("%d"), player.ack);//攻击
	_stprintf_s(S4, _T("%d"), player.def);//防御
	_stprintf_s(S5, _T("%d"), player.money);//金钱
	_stprintf_s(S6, _T("%d"), player.current_Experience);//现有经验
	_stprintf_s(S8, _T("%d"), player.yellow_Key);//黄钥匙
	_stprintf_s(S9, _T("%d"), player.blue_Key);//蓝钥匙
	_stprintf_s(S10, _T("%d"), player.red_Key);//红钥匙
	_stprintf_s(S11, _T("%d"), w);//楼层
	setbkmode(TRANSPARENT);
	//srand(time(NULL));
	settextcolor(WHITE);
	settextstyle(12,8,_T("黑体"));
	outtextxy(480, 25, S1);
	outtextxy(460, 60, S2);
	outtextxy(460, 83, S3);
	outtextxy(460, 105, S4);
	outtextxy(460, 128, S5);
	outtextxy(460, 150, S6);
	/*outtextxy(435, 275, _T("/"));
	outtextxy(438, 275, S7);*/
	outtextxy(470, 195, S8);
	outtextxy(470, 227, S9);
	outtextxy(470, 260, S10);
	outtextxy(470, 296, S11);


}

//主函数
int main()
{
	initgraph(541, 416);
	ditushuzu();
	BeginBatchDraw();
	
	while (1)
	{
		GetImage();//加载资源
		switch (state)
		{
		case STATE_MENU:
			drawMenu(menuChoose);//菜单
			break;
		case STATE_ABOUT:
			
			break;

		case STATE_GAME:
			putimage(416, 0, &f[12]);
			display_info();//玩家数据
			break; 


		default:
			break;
		}



		game_State();//游戏状态
		
		

		FlushBatchDraw();
		Sleep(50);
	}
	EndBatchDraw();
	closegraph();

}